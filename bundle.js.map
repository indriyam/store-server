{
  "version": 3,
  "sources": ["../src/config/env.ts", "../src/app.ts", "../src/datasources/track-api.ts", "../src/datasources/item-api.ts", "../src/datasources/part-api.ts", "../src/datasources/stock-api.ts", "../src/datasources/bill-api.ts", "../src/datasources/auth-api.ts", "../src/datasources/cart-api.ts", "../src/datasources/order-api.ts", "../src/graphql/schema.ts", "../src/graphql/resolvers/custom-resolvers.ts", "../src/graphql/resolvers/auth-resolver.ts", "../src/graphql/resolvers/bill-resolver.ts", "../src/graphql/resolvers/cart-resolver.ts", "../src/types/zod-schemas.ts", "../src/types/order-status.ts", "../src/graphql/resolvers/item-resolver.ts", "../src/graphql/resolvers/order-resolver.ts", "../src/graphql/resolvers/stock-resolver.ts", "../src/graphql/resolvers/root-resolver.ts", "../src/lib/jose-calls.ts", "../src/lib/session.ts", "../src/lib/types.ts", "../src/auth/models/user.ts", "../src/auth/services/password.ts", "../src/middleware/current-user.ts", "../src/auth/routes/auth_routes.ts", "../src/auth/routes/current-user.ts", "../src/auth/routes/signin.ts", "../src/auth/routes/signout.ts", "../src/auth/routes/signup.ts", "../src/auth/routes/index.ts", "../src/item/routes/item_routes.ts", "../src/item/models/item.ts", "../src/item/routes/new.ts", "../src/item/routes/index.ts", "../src/item/routes/update.ts", "../src/item/routes/delete.ts", "../src/part/routes/part_routes.ts", "../src/part/routes/assign.ts", "../src/part/models/part.ts", "../src/part/routes/index.ts", "../src/likes/routes/likes_routes.ts", "../src/likes/models/like.ts", "../src/likes/routes/index.ts", "../src/likes/routes/update.ts", "../src/stock/routes/stock_routes.ts", "../src/stock/routes/new.ts", "../src/stock/models/stock.ts", "../src/stock/routes/index.ts", "../src/stock/routes/update.ts", "../src/stock/routes/delete.ts", "../src/invoice/routes/bill_routes.ts", "../src/invoice/models/bill-item.ts", "../src/invoice/routes/new.ts", "../src/invoice/routes/index.ts", "../src/invoice/routes/update.ts", "../src/invoice/routes/delete.ts", "../src/cart/routes/cart_routes.ts", "../src/cart/models/cart.ts", "../src/cart/routes/index.ts", "../src/order/routes/order-routes.ts", "../src/order/models/order.ts", "../src/order/routes/delete.ts", "../src/order/models/address.ts", "../src/order/routes/index.ts", "../src/order/routes/new.ts", "../src/order/routes/update.ts", "../src/order/models/payment.ts", "../src/reports/order/order_detail.tsx", "../src/reports/report_styles.ts", "../src/reports/snippets/Footer.tsx", "../src/reports/snippets/bill_title.tsx", "../src/reports/snippets/box_nodate.tsx", "../src/lib/util_fns.ts", "../src/reports/snippets/box_address.tsx", "../src/reports/snippets/bom-table-head.tsx", "../src/reports/snippets/bom-table-body.tsx", "../src/reports/snippets/bom-footer.tsx", "../src/reports/snippets/signature.tsx", "../src/order/routes/pdf-generate.tsx", "../src/graphql/queries/get-order.ts", "../src/index.ts"],
  "sourcesContent": ["import \"dotenv/config\";\r\nimport { z } from \"zod\";\r\n\r\nconst appEnvSchema = z\r\n  .object({\r\n    PORT: z.string(),\r\n    // NODE_ENV: z\r\n    //   .string()\r\n    //   .refine((value) => [\"development\", \"production\"].includes(value)),\r\n    MONGO_USER: z.string(),\r\n    MONGO_PASSWORD: z.string(),\r\n    MONGO_DEFAULT_DATABASE: z.string(),\r\n    JWT_KEY: z.string(),\r\n    API_URL: z.string()\r\n  })\r\n  .required();\r\n\r\n// console.log(\"process: \", process.env);\r\n\r\nconst env = appEnvSchema.safeParse(process.env);\r\n// console.log(env);\r\n\r\n\r\nif (!env.success) {\r\n  const errMessage = env.error.issues\r\n    .map((issue) => `${issue.path.join(\".\")} ${issue.message}`)\r\n    .join(\", \");\r\n\r\n  throw new Error(errMessage);\r\n}\r\n\r\nexport default env.data;", "import env from \"./config/env.js\";\r\nimport express from \"express\";\r\nimport http from \"http\";\r\nimport session from \"express-session\";\r\nimport MongoStore from \"connect-mongo\";\r\n\r\nimport bodyparser from \"body-parser\";\r\nimport { TrackAPI } from \"./datasources/track-api.js\";\r\nimport ItemAPI from \"./datasources/item-api.js\";\r\nimport PartAPI from \"./datasources/part-api.js\";\r\nimport StockAPI from \"./datasources/stock-api.js\";\r\nimport BillAPI from \"./datasources/bill-api.js\";\r\nimport AuthAPI from \"./datasources/auth-api.js\";\r\nimport CartAPI from \"./datasources/cart-api.js\";\r\nimport OrderAPI from \"./datasources/order-api.js\";\r\nimport cors from \"cors\";\r\nimport cookieParser from \"cookie-parser\";\r\n\r\nimport { expressMiddleware } from \"@as-integrations/express4\";\r\nimport { ApolloServer } from \"@apollo/server\";\r\nimport { ApolloServerPluginDrainHttpServer } from \"@apollo/server/plugin/drainHttpServer\";\r\nimport { typeDefs } from \"./graphql/schema.js\";\r\nimport { customResolvers } from \"./graphql/resolvers/custom-resolvers.js\";\r\nimport { rootResolvers } from \"./graphql/resolvers/root-resolver.js\";\r\n\r\nimport { currentUser } from \"./middleware/current-user.js\";\r\nimport { errorHandler } from \"@manprtickets/common\";\r\nimport { authRouter } from \"./auth/routes/auth_routes.js\";\r\nimport { itemRouter } from \"./item/routes/item_routes.js\";\r\nimport { partRouter } from \"./part/routes/part_routes.js\";\r\nimport { likeRouter } from \"./likes/routes/likes_routes.js\";\r\nimport { stockRouter } from \"./stock/routes/stock_routes.js\";\r\nimport { billRouter } from \"./invoice/routes/bill_routes.js\";\r\nimport { cartRouter } from \"./cart/routes/cart_routes.js\";\r\nimport { orderRouter } from \"./order/routes/order-routes.js\";\r\n\r\ninterface MyContext {\r\n  token?: string;\r\n  dataSources?: {\r\n    trackAPI: TrackAPI;\r\n    itemAPI: ItemAPI;\r\n    partAPI: PartAPI;\r\n    stockAPI: StockAPI;\r\n    billAPI: BillAPI;\r\n    authAPI: AuthAPI;\r\n    cartAPI: CartAPI;\r\n    orderAPI: OrderAPI;\r\n  };\r\n}\r\n\r\nconst corsOptions = {\r\n  origin: \"*\",\r\n  methods: [\"POST\", \"PUT\", \"GET\", \"OPTIONS\", \"HEAD\", \"DELETE\", \"PATCH\"],\r\n  credentials: true,\r\n  // exposedHeaders: [\"Set-Cookie\"],\r\n};\r\nconst app = express();\r\nconst MONGODB_URI = `mongodb+srv://${env.MONGO_USER}:${env.MONGO_PASSWORD}@cluster0.q4wsrjb.mongodb.net/${env.MONGO_DEFAULT_DATABASE}?retryWrites=true&w=majority&appName=Cluster0`;\r\nconst { json } = bodyparser;\r\napp.use(json());\r\n\r\napp.use(cookieParser(env.JWT_KEY));\r\n\r\nconst httpServer = http.createServer(app);\r\n\r\ndeclare module \"express-session\" {\r\n  interface SessionData {\r\n    jwt: string;\r\n  }\r\n}\r\n\r\napp.use(cors(corsOptions));\r\n\r\napp.use(\r\n  session({\r\n    secret: [process.env.JWT_KEY!],\r\n    resave: false,\r\n    // name: \"session.web\",\r\n    saveUninitialized: false,\r\n    // cookie: { httpOnly: false, sameSite: \"none\" },\r\n    store: MongoStore.create({\r\n      mongoUrl: MONGODB_URI,\r\n      ttl: 8 * 60 * 60,\r\n      autoRemove: \"interval\",\r\n      autoRemoveInterval: 5,\r\n    }),\r\n  })\r\n);\r\n\r\napp.use((req, res, next) => {\r\n  const usertoken = req.headers[\"usertoken\"];\r\n\r\n  if (!req.session?.jwt && usertoken) {\r\n    req.session.jwt = usertoken as string;\r\n  }\r\n\r\n  res.header(\"Access-Control-Allow-Origin\", req.headers.origin);\r\n  res.header(\r\n    \"Access-Control-Allow-Methods\",\r\n    \"OPTIONS, GET, POST, PUT, PATCH, DELETE\"\r\n  );\r\n  res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n  res.header(\r\n    \"Access-Control-Allow-Headers\",\r\n    \"Origin X-Requested-With, Content-Type, Accept, Authorization\"\r\n  );\r\n\r\n  next();\r\n});\r\n\r\napp.use(currentUser);\r\n\r\napp.use(\"/api/users\", authRouter);\r\napp.use(\"/api/item\", itemRouter);\r\napp.use(\"/api/part\", partRouter);\r\napp.use(\"/api/like\", likeRouter);\r\napp.use(\"/api/stock\", stockRouter);\r\napp.use(\"/api/invoice\", billRouter);\r\napp.use(\"/api/cart\", cartRouter);\r\napp.use(\"/api/order\", orderRouter);\r\n\r\napp.use(errorHandler);\r\n\r\nconst startServer = async () => {\r\n  const server = new ApolloServer<MyContext>({\r\n    typeDefs,\r\n    resolvers: { Date: { ...customResolvers.Date }, ...rootResolvers },\r\n    plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\r\n  });\r\n  await server.start();\r\n\r\n  app.use(\r\n    \"/graphql\",\r\n    cors<cors.CorsRequest>(corsOptions),\r\n    express.json(),\r\n    expressMiddleware(server, {\r\n      context: async ({ req }) => {\r\n        const token = req.headers.usertoken as string;\r\n        // console.log(\"token in graphql: \", token, \" headers: \", req.headers);\r\n\r\n        const { cache } = server;\r\n        return {\r\n          token,\r\n          dataSources: {\r\n            trackAPI: new TrackAPI({ cache }),\r\n            itemAPI: new ItemAPI({ cache, token }),\r\n            partAPI: new PartAPI({ cache, token }),\r\n            stockAPI: new StockAPI({ cache, token }),\r\n            billAPI: new BillAPI({ cache, token }),\r\n            authAPI: new AuthAPI({ cache, token }),\r\n            cartAPI: new CartAPI({ cache, token }),\r\n            orderAPI: new OrderAPI({ cache, token }),\r\n          },\r\n        };\r\n      },\r\n    })\r\n  );\r\n  httpServer.listen(env.PORT || 8080, () => {\r\n    console.log(`\uD83D\uDE80 Server ready at ${process.env.PORT}`);\r\n  });\r\n};\r\n\r\nexport { startServer, MONGODB_URI };\r\n", "import { RESTDataSource } from \"@apollo/datasource-rest\";\r\nimport { TrackModel, AuthorModel, ModuleModel } from \"../graphql/models.js\"\r\n\r\nexport class TrackAPI extends RESTDataSource {\r\n  // the Catstronauts catalog is hosted on this server\r\n  baseURL = \"https://odyssey-lift-off-rest-api.herokuapp.com/\";\r\n  \r\n  getTracksForHome() {\r\n    return this.get<TrackModel[]>(\"tracks\");\r\n  }\r\n\r\n  getAuthor(authorId: string) {\r\n    return this.get<AuthorModel>(`author/${authorId}`);\r\n  }\r\n\r\n  getTrack(trackId: string) {\r\n    return this.get<TrackModel>(`track/${trackId}`);\r\n  }\r\n\r\n  getTrackModules(trackId: string) {\r\n    return this.get<ModuleModel[]>(`track/${trackId}/modules`);\r\n  }\r\n  \r\n  getModule(moduleId: string) {\r\n    return this.get<ModuleModel>(`module/${moduleId}`);\r\n  }\r\n\r\n  incrementTrackViews(trackId: string) {\r\n    return this.patch<TrackModel>(`track/${trackId}/numberOfViews`);\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport {\r\n  AssignmentModel,\r\n  AssignModel,\r\n  CartModel,\r\n  ItemModel,\r\n  LikeModel,\r\n  PartModel,\r\n  TypeEntry,\r\n} from \"../graphql/models.js\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class ItemAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getItemsBySearch(searchStr: string, itemType: string) {\r\n    const searchString = !searchStr ? \"all\" : searchStr;\r\n    const typeString = itemType;\r\n    // console.log(\"search string: \", searchStr, \" type: \", typeString);\r\n\r\n    return await this.get<ItemModel[]>(\r\n      `item/search/${itemType}/${searchString}/`\r\n    );\r\n   \r\n  }\r\n\r\n  async getItemById(id: string) {\r\n    // console.log(\"id: \",id);\r\n    \r\n    return await this.get<ItemModel>(`item/${id}`);\r\n  }\r\n\r\n  async getPart(itemid: string) {\r\n    return await this.get<ItemModel>(`item/${itemid}`);\r\n  }\r\n\r\n  async getItemsByType(itemType: string) {\r\n    return await this.get<TypeEntry[]>(`item/select/${itemType}`);\r\n  }\r\n\r\n  async getAssignments(assign: string) {\r\n    return await this.get<AssignmentModel[]>(`part/${assign}`);\r\n  }\r\n\r\n  async getAssignedParts(assignid: string, item_type: string) {\r\n    return await this.get<PartModel[]>(`part/${item_type}/${assignid}`);\r\n  }\r\n\r\n  async getLikes() {\r\n    const likes = await this.get<LikeModel[]>(\"like/\");\r\n    // console.log(\"likes in api: \", likes);\r\n    return likes;\r\n  }\r\n\r\n  async changeLike(itemId: string) {\r\n    try {\r\n      return await this.patch<{ message: string }>(`like/${itemId}`);\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async createAssignments(item: AssignModel) {\r\n    // console.log(\"params currently: \", item);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<string>(`part/assign/${item.id}`, {\r\n        body: item,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async createItem(item: ItemModel) {\r\n    // console.log(\"params currently: \", item);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<ItemModel>(\"item/new\", {\r\n        body: item,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateItem(item: ItemModel) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      // return await this.put<ItemModel>(`${type}/${item.id}`, {\r\n      return await this.put<ItemModel>(`item/${item.id}`, {\r\n        body: item,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async deleteItem(id: string) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      return await this.delete<string>(`item/${id}`);\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport { PartModel, StockInput, StockModel } from \"../graphql/models.js\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class PartAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  // async getAssignedParts(assignid: string, assign: string) {\r\n  //   return await this.get<PartModel[]>(`part/${assign}/${assignid}`);\r\n  // }\r\n\r\n  // async getAssignedPart(assignid: string, assign: string) {\r\n  //   return await this.get<PartModel>(`part/${assign}/${assignid}`);\r\n  // }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport { ItemModel, ItemStockModel, StockInput, StockModel } from \"../graphql/models.js\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class StockAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getStockById(stockId: string) {\r\n    return await this.get<StockModel>(`stock/${stockId}`);\r\n  }\r\n\r\n  async getStockByItemId(itemid: string) {\r\n    return await this.get<StockModel[]>(`stock/item/${itemid}`);\r\n  }\r\n\r\n  async getStockByItemType(itemtype: string) {\r\n    return await this.get<ItemStockModel[]>(`stock/type/${itemtype}`);\r\n  }\r\n\r\n  async createStock(stockitem: StockInput) {\r\n    // console.log(\"params currently: \", item);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<StockModel>(\"stock/new\", {\r\n        body: stockitem,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateStock(stockitem: StockInput) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      // return await this.put<ItemModel>(`${type}/${item.id}`, {\r\n      return await this.put<StockModel>(`stock/update`, {\r\n        body: stockitem,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async deleteStock(id: string) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      return await this.delete<string>(`stock/delete/${id}`);\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport { BillInput, BillModel } from \"../graphql/models.js\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class BillAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getBillById(billId: string) {\r\n    return await this.get<BillModel>(`invoice/${billId}`);\r\n  }\r\n\r\n  async getBillByItemId(itemid: string) {\r\n    return await this.get<BillModel[]>(`invoice/item/${itemid}`);\r\n  }\r\n\r\n  async createBill(billitem: BillInput) {\r\n    // console.log(\"params currently: \", billitem);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<BillModel>(\"invoice/new\", {\r\n        body: billitem,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateBill(stockitem: BillInput) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      // return await this.put<ItemModel>(`${type}/${item.id}`, {\r\n      return await this.put<BillModel>(`invoice/update`, {\r\n        body: stockitem,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async deleteBill(id: string) {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      return await this.delete<string>(`invoice/delete/${id}`);\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport {\r\n  AuthModel,\r\n  SignInInput,\r\n  SignUpInput,\r\n  UserModel,\r\n} from \"../graphql/models.js\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class AuthAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getCurrentUser() {\r\n    return await this.get<UserModel>(\"users/currentuser\");\r\n  }\r\n\r\n  async signin(credentials: SignInInput) {\r\n    // console.log(\"params currently: \", billitem);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<AuthModel>(\"users/signin\", {\r\n        body: credentials,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async signup(credentials: SignUpInput) {\r\n    // console.log(\"params currently: \", credentials);\r\n\r\n    try {\r\n      // return await this.post<ItemModel>(`${type}/new`, {\r\n      return await this.post<AuthModel>(\"users/signup\", {\r\n        body: credentials,\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async signout() {\r\n    // console.log(\"token currently: \", this.token);\r\n\r\n    try {\r\n      // return await this.put<ItemModel>(`${type}/${item.id}`, {\r\n      return await this.post<AuthModel>(`users/signout`);\r\n    } catch (error: any) {\r\n      // console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\nimport { CartItemModel, CartModel, ItemModel } from \"../graphql/models.js\";\r\n\r\nexport default class CartAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getCartUser() {\r\n    return await this.get<CartModel>(\"cart/\");\r\n  }\r\n\r\n  async replaceCart(cartitems: CartItemModel[], totalQuantity: number) {\r\n    try {\r\n      return await this.post<CartModel>(\"cart/\", {\r\n        body: { cartitems, totalQuantity },\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import env from \"../config/env.js\";\r\nimport { RESTDataSource, AugmentedRequest } from \"@apollo/datasource-rest\";\r\nimport { KeyValueCache } from \"@apollo/utils.keyvaluecache\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  AddressModel,\r\n  CartItemModel,\r\n  CartModel,\r\n  ItemModel,\r\n  OrderModel,\r\n  FileModel,\r\n} from \"../graphql/models.js\";\r\nimport { AddressIn, AddressOut } from \"../types/zod-schemas.js\";\r\n\r\nexport default class OrderAPI extends RESTDataSource {\r\n  override baseURL = `${env.API_URL}/api/`;\r\n  private token: string;\r\n\r\n  constructor(options: { token: string; cache: KeyValueCache }) {\r\n    super(options);\r\n    this.token = options.token;\r\n  }\r\n\r\n  override willSendRequest(_path: string, request: AugmentedRequest) {\r\n    request.headers[\"usertoken\"] = this.token;\r\n  }\r\n\r\n  async getUserAddresses() {\r\n    return await this.get<AddressModel[]>(\"order/address/\");\r\n  }\r\n\r\n  async getAddress(id: string) {\r\n    return await this.get<AddressModel>(`order/address/${id}`);\r\n  }\r\n\r\n  async getUserOrders() {\r\n    return await this.get<OrderModel[]>(\"order/\");\r\n  }\r\n\r\n  async getOrder(orderid: string) {\r\n    return await this.get<OrderModel>(`order/${orderid}`);\r\n  }\r\n\r\n  async getOrderPdf(orderid: string) {\r\n    return await this.get<FileModel>(`order/genpdf/${orderid}`);\r\n  }\r\n\r\n  async createOrder(cart: Omit<CartModel, \"userId\">, value: number) {\r\n    try {\r\n      return await this.post<OrderModel>(\"order/\", {\r\n        body: { cart, value },\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateOrder(orderid: string, status: string) {\r\n    try {\r\n      return await this.patch<{ message: string }>(`order/${orderid}`, {\r\n        body: { status },\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async cancelOrder(orderid: string) {\r\n    try {\r\n      return await this.delete<{ message: string }>(`order/${orderid}`);\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // async completeOrder(orderid: string, shipping: AddressModel) {\r\n  async completeOrder(orderid: string, shipping: AddressOut) {\r\n    try {\r\n      return await this.patch<{ message: string }>(\r\n        `order/complete/${orderid}`,\r\n        {\r\n          body: { shipping },\r\n        }\r\n      );\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // async createAddress(input: Omit<AddressModel, \"id\" | \"userId\">) {\r\n  async createAddress(input: Omit<AddressIn, \"id\">) {\r\n    try {\r\n      return await this.post<{ shipId: string }>(\"order/address\", {\r\n        body: { input },\r\n      });\r\n    } catch (error: any) {\r\n      console.log(\"graphql error: \", error?.extensions);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n", "import { gql } from \"graphql-tag\";\r\n\r\nexport const typeDefs = gql`\r\n  scalar Date\r\n\r\n  type Query {\r\n    \"Query to get tracks array for the homepage grid\"\r\n    tracksForHome: [Track!]!\r\n    \"Fetch a specific track, provided a track's ID\"\r\n    track(id: ID!): Track!\r\n    \"Fetch a specific module, provided a module's ID\"\r\n    module(id: ID!): Module!\r\n    \"Fetch all categories\"\r\n    categories: [Category]\r\n    \"Common query to get item like Category, Equipment, Product etc for the select input\"\r\n    itemsBySearch(search: String!, itemType: String!): [Item!]\r\n    \"Get Item by itemid\"\r\n    itemById(id: ID!): Item!\r\n    \"Get Stock by itemid\"\r\n    stockByItemId(itemid: ID!): [StockEntry]\r\n    \"Get Stock by stockid\"\r\n    stockById(stockid: ID!): StockEntry\r\n    \"Get Stock by itemType\"\r\n    stockByItemType(itemType: String!): [ItemStock!]!\r\n    \"get items by type for filling the select list in assign page\"\r\n    itemsByType(itemType: String!): [TypeEntry]\r\n    \"Assignment of Item to category. Get items by Category\"\r\n    assignments(assign: String!): [Assignments]\r\n    \"Get Part or Subcategory by assigned Category\"\r\n    assignedParts(assignid: ID!, itemtype: String!): [Part!]!\r\n    billById(billid: ID!): BillEntry\r\n    billByItemId(itemid: ID!): [BillEntry]\r\n    currentUser: User\r\n    cartUser: Cart!\r\n    \"get shipping address by userId\"\r\n    userAddresses: [Address!]!\r\n    \"get orders by user\"\r\n    userOrders: [OrderEntry!]!\r\n    \"get order by Id\"\r\n    orderByID(orderid: ID!): OrderEntry!\r\n    \"generate a pdf file for order by Id\"\r\n    generateOrderPdf(orderid: ID!): File\r\n    likes: [LikeItem]\r\n  }\r\n\r\n  type Mutation {\r\n    incrementTrackViews(id: ID!): IncrementTrackViewsResponse!\r\n    createItem(input: ItemInput!): CreateItemResponse!\r\n    updateItem(input: ItemInput!): CreateItemResponse!\r\n    deleteItem(id: ID!): DeleteItemResponse!\r\n    createAssignments(input: AssignmentInput!): CreateAssignmentResponse!\r\n    createStock(input: StockInput!): CreateStockResponse!\r\n    updateStock(input: StockInput!): CreateStockResponse!\r\n    deleteStock(stockId: ID!): DeleteStockResponse!\r\n    createBill(input: BillInput!): CreateBillResponse!\r\n    updateBill(input: BillInput!): CreateBillResponse!\r\n    deleteBill(billId: ID!): DeleteBillResponse!\r\n    signin(input: SignInput!): SignInResponse!\r\n    signup(input: SignUpInput!): SignInResponse!\r\n    signout: SignOutResponse!\r\n    replaceCart(input: CartInput!): ReplaceCartResponse!\r\n    createOrder(cart: CartInput!, value: Float!): CreateOrderResponse!\r\n    updateOrder(orderid: ID!, status: String!): UpdateOrderResponse!\r\n    cancelOrder(orderid: ID!): UpdateOrderResponse!\r\n    completeOrder(orderid: ID!, shipping: AddressInput!): UpdateOrderResponse!\r\n    createAddress(input: AddressInput!): CreateAddressResponse!\r\n    like(itemId: ID!): UpdateLikeResponse!\r\n  }\r\n\r\n  type File {\r\n    id: String!\r\n    filename: String!\r\n    fileurl: String!\r\n  }\r\n\r\n  type LikeItem {\r\n    item: Item\r\n    userId: String!\r\n  }\r\n\r\n  input AddressInput {\r\n    id: ID!\r\n    email: String!\r\n    receiver: String!\r\n    phone: String!\r\n    house: String!\r\n    street: String!\r\n    pincode: String!\r\n    city: String!\r\n  }\r\n\r\n  type Address {\r\n    id: ID!\r\n    email: String!\r\n    receiver: String!\r\n    phone: String!\r\n    house: String!\r\n    street: String!\r\n    pincode: String!\r\n    city: String!\r\n  }\r\n\r\n  type CreateAddressResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    shipid: String\r\n  }\r\n\r\n  type UpdateLikeResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n  }\r\n\r\n  type UpdateOrderResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n  }\r\n\r\n  type CreateOrderResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    order: OrderEntry\r\n  }\r\n\r\n  type OrderEntry {\r\n    id: ID!\r\n    userId: String!\r\n    status: String!\r\n    items: [OrderItem!]!\r\n    orderDate: Date!\r\n    expiresAt: Date!\r\n    totalQuantity: Int!\r\n    orderValue: Float!\r\n    shipping: Address\r\n  }\r\n\r\n  type OrderItem {\r\n    orderitem: Item!\r\n    orderId: String!\r\n    quantity: Int!\r\n    price: Float!\r\n    totalPrice: Float!\r\n  }\r\n\r\n  input CartInput {\r\n    cartitems: [CartItemInput!]!\r\n    totalQuantity: Int!\r\n  }\r\n\r\n  type Cart {\r\n    cartitems: [CartItem!]!\r\n    totalQuantity: Int!\r\n    userId: String!\r\n  }\r\n\r\n  input CartItemInput {\r\n    itemid: String!\r\n    quantity: Int!\r\n    price: Float!\r\n    totalPrice: Float!\r\n    limitQty: Int!\r\n  }\r\n\r\n  type CartItem {\r\n    item: Item!\r\n    quantity: Int!\r\n    price: Float!\r\n    totalPrice: Float!\r\n    limitQty: Int!\r\n  }\r\n\r\n  type Part {\r\n    id: ID!\r\n    partitem: Item!\r\n    itemtype: String!\r\n    assignparent: Item!\r\n    assign: String!\r\n  }\r\n\r\n  input SignInput {\r\n    email: String!\r\n    password: String!\r\n  }\r\n\r\n  input SignUpInput {\r\n    email: String!\r\n    password: String!\r\n    firstName: String!\r\n    lastName: String!\r\n    phone: String!\r\n  }\r\n\r\n  type ReplaceCartResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n  }\r\n\r\n  type SignInResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    user: User\r\n    token: String!\r\n  }\r\n\r\n  type SignOutResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n  }\r\n\r\n  type User {\r\n    id: ID!\r\n    email: String!\r\n    firstName: String!\r\n    lastName: String!\r\n    phone: String!\r\n  }\r\n\r\n  input BillInput {\r\n    itemid: String!\r\n    itemtype: String!\r\n    quantity: Int!\r\n    qtytype: String!\r\n    unit: String!\r\n    price: Float!\r\n    gst: Float!\r\n    discount: Float!\r\n    billtotal: Float!\r\n    shipping: Float!\r\n    userId: String!\r\n  }\r\n\r\n  type BillEntry {\r\n    id: String!\r\n    itemid: String!\r\n    itemtype: String!\r\n    quantity: Int!\r\n    qtytype: String!\r\n    unit: String!\r\n    price: Float!\r\n    gst: Float!\r\n    discount: Float!\r\n    billtotal: Float!\r\n    shipping: Float!\r\n    userId: String!\r\n  }\r\n\r\n  input StockInput {\r\n    itemid: String!\r\n    itemtype: String!\r\n    quantity: Int!\r\n    qtytype: String!\r\n    unit: String!\r\n    price: Float!\r\n    gst: Float!\r\n    discount: Float!\r\n    userId: String!\r\n  }\r\n\r\n  \"A generic item type that can represent different entities like Category, Equipment, Product, etc.\"\r\n  type Item {\r\n    id: ID!\r\n    itemType: String!\r\n    title: String!\r\n    description: String!\r\n    image: String!\r\n    unit: String\r\n    dimensions: String\r\n    userId: String!\r\n  }\r\n\r\n  type ItemStock {\r\n    id: ID!\r\n    item: Item!\r\n    quantity: Int!\r\n    qtytype: String!\r\n    price: Float!\r\n    gst: Float!\r\n    discount: Float!\r\n    userId: String!\r\n  }\r\n\r\n  type StockEntry {\r\n    id: String!\r\n    itemid: String!\r\n    itemtype: String!\r\n    quantity: Int!\r\n    qtytype: String!\r\n    unit: String!\r\n    price: Float!\r\n    gst: Float!\r\n    discount: Float!\r\n    userId: String!\r\n  }\r\n\r\n  type CreateBillResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: BillEntry\r\n  }\r\n\r\n  type DeleteBillResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: String\r\n  }\r\n\r\n  type CreateStockResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: StockEntry\r\n  }\r\n\r\n  type DeleteStockResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: String!\r\n  }\r\n\r\n  type TestPart {\r\n    id: ID!\r\n    name: String!\r\n  }\r\n\r\n  type Assignments {\r\n    _id: TestPart!\r\n    assigned: [Assignment!]!\r\n  }\r\n\r\n  type Assignment {\r\n    id: ID!\r\n    itemType: String!\r\n    title: String!\r\n    description: String!\r\n    image: String!\r\n  }\r\n\r\n  input AssignmentInput {\r\n    id: ID!\r\n    assignIDs: [ID!]!\r\n    assign: String!\r\n  }\r\n\r\n  type TypeEntry {\r\n    key: ID!\r\n    label: String!\r\n  }\r\n\r\n  type CreateAssignmentResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: String\r\n  }\r\n\r\n  type CreateItemResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: Item\r\n  }\r\n\r\n  type DeleteItemResponse {\r\n    code: Int!\r\n    success: Boolean!\r\n    message: String!\r\n    item: String!\r\n  }\r\n\r\n  type IncrementTrackViewsResponse {\r\n    \"Similar to HTTP status code, represents the status of the mutation\"\r\n    code: Int!\r\n    \"Indicates whether the mutation was successful\"\r\n    success: Boolean!\r\n    \"Human-readable message for the UI\"\r\n    message: String!\r\n    \"Newly updated track after a successful mutation\"\r\n    track: Track\r\n  }\r\n\r\n  type Category {\r\n    id: ID!\r\n    title: String!\r\n    description: String!\r\n    image: String!\r\n    userId: String!\r\n  }\r\n\r\n  input ItemInput {\r\n    id: ID!\r\n    itemType: String!\r\n    title: String!\r\n    description: String!\r\n    image: String!\r\n    unit: String!\r\n    dimensions: String!\r\n    userId: String!\r\n    referid: String!\r\n  }\r\n\r\n  \"A track is a group of Modules that teaches about a specific topic\"\r\n  type Track {\r\n    id: ID!\r\n    \"The track's title\"\r\n    title: String!\r\n    \"The track's main Author\"\r\n    author: Author!\r\n    \"The track's illustration to display in track card or track page detail\"\r\n    thumbnail: String\r\n    \"The track's approximate length to complete, in minutes\"\r\n    length: Int\r\n    \"The number of modules this track contains\"\r\n    modulesCount: Int\r\n    \"The track's complete description, can be in markdown format\"\r\n    description: String\r\n    \"The number of times a track has been viewed\"\r\n    numberOfViews: Int\r\n    \"The track's complete array of Modules\"\r\n    modules: [Module!]!\r\n  }\r\n\r\n  \"Author of a complete Track or a Module\"\r\n  type Author {\r\n    id: ID!\r\n    \"Author's first and last name\"\r\n    name: String!\r\n    \"Author's profile picture\"\r\n    photo: String\r\n  }\r\n\r\n  \"A Module is a single unit of teaching. Multiple Modules compose a Track\"\r\n  type Module {\r\n    id: ID!\r\n    \"The module's title\"\r\n    title: String!\r\n    \"The module's length in minutes\"\r\n    length: Int\r\n    \"The module's text-based description, can be in markdown format. In case of a video, it will be the enriched transcript\"\r\n    content: String\r\n    \"The module's video url, for video-based modules\"\r\n    videoUrl: String\r\n  }\r\n`;\r\n", "import { GraphQLScalarType, Kind } from \"graphql\";\r\n\r\nconst dateScalar = new GraphQLScalarType({\r\n  name: \"Date\",\r\n  description: \"Date custom scalar type\",\r\n  serialize(value) {\r\n    if (value instanceof Date) {\r\n      return value.getTime(); // Convert outgoing Date to integer for JSON\r\n    }\r\n    throw Error(\"GraphQL Date Scalar serializer expected a `Date` object\");\r\n  },\r\n  parseValue(value) {\r\n    if (typeof value === \"number\") {\r\n      return new Date(value); // Convert incoming integer to Date\r\n    }\r\n    throw new Error(\"GraphQL Date Scalar parser expected a `number`\");\r\n  },\r\n  parseLiteral(ast) {\r\n    if (ast.kind === Kind.INT) {\r\n      // Convert hard-coded AST string to integer and then to Date\r\n      return new Date(parseInt(ast.value, 10));\r\n    }\r\n    // Invalid hard-coded value (not an integer)\r\n    return null;\r\n  },\r\n});\r\n\r\nexport const customResolvers = {\r\n  Date: {\r\n    date: dateScalar,\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types.js\";\r\n\r\nexport const authResolvers: Resolvers = {\r\n  Query: {\r\n    currentUser: (_, __, { dataSources }) => {\r\n      return dataSources.authAPI.getCurrentUser();\r\n    },\r\n  },\r\n  Mutation: {\r\n    signin: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        const result = await dataSources.authAPI.signin(input);\r\n        // console.log(\"result: \", result);\r\n\r\n        if (!result) {\r\n          return {\r\n            code: 401,\r\n            success: false,\r\n            message: \"Invalid credentials\",\r\n            user: undefined,\r\n            token: \"\",\r\n          };\r\n        }\r\n        const { user, token } = result;\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Signed In successfully\",\r\n          user: user,\r\n          token: token,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          user: undefined,\r\n          token: \"\",\r\n        };\r\n      }\r\n    },\r\n    signup: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        const result = await dataSources.authAPI.signup(input);\r\n        // console.log(\"result: \", result);\r\n\r\n        if (!result) {\r\n          return {\r\n            code: 401,\r\n            success: false,\r\n            message: \"Invalid credentials\",\r\n            user: undefined,\r\n            token: \"\",\r\n          };\r\n        }\r\n        const { user, token } = result;\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Signed Up successfully\",\r\n          user: user,\r\n          token: token,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          user: undefined,\r\n          token: \"\",\r\n        };\r\n      }\r\n    },\r\n    signout: async (_, __, { dataSources }) => {\r\n      try {\r\n        await dataSources.authAPI.signout();\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Signed out\",\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types.js\";\r\n\r\nexport const billResolvers: Resolvers = {\r\n  Query: {\r\n    billById: (_, { billid }, { dataSources }) => {\r\n      return dataSources.billAPI.getBillById(billid);\r\n    },\r\n    billByItemId: (_, { itemid }, { dataSources }) => {\r\n      return dataSources.billAPI.getBillByItemId(itemid);\r\n    },\r\n  },\r\n  Mutation: {\r\n    createBill: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        // console.log(\"New item created: \", input);\r\n        const newBillItem = await dataSources.billAPI.createBill(input);\r\n        // console.log(\"returning new bill: \", newBillItem);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Bill created successfully\",\r\n          item: newBillItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    updateBill: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        const editBillItem = await dataSources.billAPI.updateBill(input);\r\n        // console.log(\"New item created: \", newItem);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Bill updated successfully\",\r\n          item: editBillItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    deleteBill: async (_, { billId }, { dataSources }) => {\r\n      try {\r\n        const message = await dataSources.billAPI.deleteBill(billId);\r\n        // console.log(\"return value: \", message);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Bill deleted successfully\",\r\n          item: message as string,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: \"\",\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types.js\";\r\n\r\nexport const cartResolvers: Resolvers = {\r\n  Query: {\r\n    cartUser: (_, __, { dataSources }) => {\r\n      return dataSources.cartAPI.getCartUser();\r\n    },\r\n  },\r\n  CartItem: {\r\n    item: ({ itemid }, _, { dataSources }) => {\r\n       return dataSources.itemAPI.getPart(itemid);\r\n    },\r\n  },\r\n  Mutation: {\r\n    replaceCart: async (_, { input }, { dataSources }) => {\r\n\r\n        if (!input) {\r\n          throw new Error(\"Input is required\");\r\n        }\r\n        const { cartitems, totalQuantity } = input;\r\n\r\n      try {\r\n        const cartMessage = await dataSources.cartAPI.replaceCart(cartitems, totalQuantity);\r\n        // console.log(\"cartMessage: \", cartMessage);\r\n        \r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Cart replaced successfully\",\r\n        };\r\n      } catch (err: any) {\r\n        // console.log(\"Error thrown in here\");\r\n\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { z } from \"zod\";\r\nimport { OrderStatus } from \"./order-status.js\";\r\n\r\nexport const UpdateMessage = z.object({\r\n  message: z.string(),\r\n});\r\n\r\nconst addressSchema = z.object({\r\n  id: z.string().transform((val) => (val ? undefined : val)),\r\n  email: z.string(),\r\n  receiver: z.string(),\r\n  phone: z.string(),\r\n  house: z.string(),\r\n  street: z.string(),\r\n  city: z.string(),\r\n  pincode: z.string(),\r\n});\r\n\r\nexport type AddressIn = z.input<typeof addressSchema>;\r\nexport type AddressOut = z.output<typeof addressSchema>;\r\n\r\nexport enum ItemTypes {\r\n  Product = \"Product\",\r\n  Spare = \"Spare\",\r\n  Equipment = \"Equipment\",\r\n  Package = \"Package\",\r\n  Category = \"Category\",\r\n}\r\n\r\nconst numberSchema = z.coerce\r\n  .number()\r\n  .min(0.01)\r\n  .max(1000)\r\n  .nonnegative()\r\n  .multipleOf(0.01);\r\nconst stringSchema = z.string().min(6);\r\n\r\nconst itemSchema = z.object({\r\n  id: z.string(),\r\n  itemType: z.enum(ItemTypes),\r\n  title: stringSchema,\r\n  image: stringSchema,\r\n  description: stringSchema,\r\n  unit: z.string().optional(),\r\n  dimensions: stringSchema.optional(),\r\n  quantity: numberSchema.optional(),\r\n  price: numberSchema.optional(),\r\n  totalPrice: numberSchema.optional(),\r\n  gst: numberSchema.optional(),\r\n  discount: numberSchema.optional(),\r\n});\r\n\r\nexport type ItemType = z.infer<typeof itemSchema>;\r\n\r\nexport const orderItemSchema = z.object({\r\n  orderitem: itemSchema,\r\n  orderId: z.string().optional(),\r\n  quantity: numberSchema,\r\n  price: numberSchema,\r\n  totalPrice: numberSchema,\r\n});\r\n\r\nexport type OrderItemType = z.infer<typeof orderItemSchema>;\r\n\r\nexport const orderSchema = z.object({\r\n  id: z.string(),\r\n  status: z.enum(OrderStatus),\r\n  items: z.array(orderItemSchema),\r\n  orderDate: z.coerce.date(),\r\n  totalQuantity: numberSchema,\r\n  orderValue: numberSchema,\r\n  shipping: addressSchema,\r\n});\r\n\r\nexport type OrderType = z.infer<typeof orderSchema>;\r\n", "export enum OrderStatus {\r\n  // When the order has been created, but the\r\n  Created = \"Created\",\r\n\r\n  // The product the order is trying to reserve has already been\r\n  // reserved, or when the user has cancelled the order\r\n  // The order expires before payment\r\n  Cancelled = \"Cancelled\",\r\n\r\n  // The order has successfully reserved the product\r\n  AwaitingPayment = \"Awaiting:payment\",\r\n\r\n  // The order has reserved the product and the user has provided payment successfully\r\n  Complete = \"Complete\",\r\n}\r\n", "import { GraphQLScalarType, Kind } from \"graphql\";\r\nimport { Resolvers } from \"../../types/types.js\";\r\nimport { UpdateMessage } from \"../../types/zod-schemas.js\";\r\n\r\nexport const itemResolvers: Resolvers = {\r\n  Query: {\r\n    itemsBySearch: (_, { search, itemType }, { dataSources }) => {\r\n      return dataSources.itemAPI.getItemsBySearch(search, itemType);\r\n    },\r\n    itemById: (_, { id }, { dataSources }) => {\r\n      return dataSources.itemAPI.getItemById(id);\r\n    },\r\n    itemsByType: (_, { itemType }, { dataSources }) => {\r\n      return dataSources.itemAPI.getItemsByType(itemType);\r\n    },\r\n    assignments: (_, { assign }, { dataSources }) => {\r\n      return dataSources.itemAPI.getAssignments(assign);\r\n    },\r\n    assignedParts: (_, { assignid, itemtype }, { dataSources }) => {\r\n      return dataSources.itemAPI.getAssignedParts(assignid, itemtype);\r\n    },\r\n    likes: (_, __, { dataSources }) => {\r\n      return dataSources.itemAPI.getLikes();\r\n    },\r\n  },\r\n  Part: {\r\n    partitem: ({ itemid }, _, { dataSources }) => {\r\n      return dataSources.itemAPI.getPart(itemid);\r\n    },\r\n    assignparent: ({ assignid }, _, { dataSources }) => {\r\n      return dataSources.itemAPI.getPart(assignid);\r\n    },\r\n  },\r\n  LikeItem: {\r\n    item: ({ itemId }, _, { dataSources }) => {\r\n      return dataSources.itemAPI.getPart(itemId);\r\n    },\r\n  },\r\n  Mutation: {\r\n    createAssignments: async (_, { input }, { dataSources }) => {\r\n      // console.log(\"input received here: \", input);\r\n\r\n      try {\r\n        const assignMessage = await dataSources.itemAPI.createAssignments(\r\n          input\r\n        );\r\n        // console.log(\"New item created: \", newItem);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Items assignments created successfully\",\r\n          item: assignMessage,\r\n        };\r\n      } catch (err: any) {\r\n        // console.log(\"Error thrown in here\");\r\n\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: \"Assignments failed\",\r\n        };\r\n      }\r\n    },\r\n    createItem: async (_, { input }, { dataSources, token }) => {\r\n      // console.log(\"token received here: \", token);\r\n\r\n      try {\r\n        const newItem = await dataSources.itemAPI.createItem(input);\r\n        // console.log(\"New item created: \", newItem);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item created successfully\",\r\n          item: newItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    updateItem: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        const editItem = await dataSources.itemAPI.updateItem(input);\r\n        // console.log(\"New item created: \", newItem);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item updated successfully\",\r\n          item: editItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    deleteItem: async (_, { id }, { dataSources }) => {\r\n      try {\r\n        const message = await dataSources.itemAPI.deleteItem(id);\r\n        // console.log(\"return value: \", message);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item deleted successfully\",\r\n          item: message as string,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: \"\",\r\n        };\r\n      }\r\n    },\r\n    like: async (_, { itemId }, { dataSources }) => {\r\n      try {\r\n        const likeStatus = await dataSources.itemAPI.changeLike(itemId);\r\n        // console.log(\"New Order Created: \", newOrder);\r\n        const statusMessage = UpdateMessage.safeParse(likeStatus);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: statusMessage.success\r\n            ? statusMessage.data.message\r\n            : \"Invalid return message\",\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error updating order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types.js\";\r\nimport { UpdateMessage } from \"../../types/zod-schemas.js\";\r\n\r\nexport const orderResolvers: Resolvers = {\r\n  Query: {\r\n    userAddresses: (_, __, { dataSources }) => {\r\n      return dataSources.orderAPI.getUserAddresses();\r\n    },\r\n    userOrders: (_, __, { dataSources }) => {\r\n      return dataSources.orderAPI.getUserOrders();\r\n    },\r\n    orderByID: (_, { orderid }, { dataSources }) => {\r\n \r\n      \r\n      return dataSources.orderAPI.getOrder(orderid);\r\n    },\r\n    generateOrderPdf: (_, { orderid }, { dataSources }) => {\r\n      return dataSources.orderAPI.getOrderPdf(orderid);\r\n    },\r\n  },\r\n  OrderItem: {\r\n    orderitem: ({ itemid }, _, { dataSources }) => {\r\n      return dataSources.itemAPI.getPart(itemid);\r\n    },\r\n  },\r\n  OrderEntry: {\r\n    shipping: async ({ shipId }, _, { dataSources }) => {\r\n      if (!shipId) return null;\r\n      const ship_id = shipId.toString();\r\n\r\n      return dataSources.orderAPI.getAddress(ship_id);\r\n    },\r\n  },\r\n  Mutation: {\r\n    createOrder: async (_, { cart, value }, { dataSources }) => {\r\n      try {\r\n        const newOrder = await dataSources.orderAPI.createOrder(cart, value);\r\n\r\n        // const transformOrder = { ...newOrder, shipping: undefined };\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Order created successfully\",\r\n          order: newOrder,\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error creating order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n          order: null,\r\n        };\r\n      }\r\n    },\r\n    updateOrder: async (_, { orderid, status }, { dataSources }) => {\r\n      // console.log(\"create order: \", cart, \" value: \", value);\r\n\r\n      try {\r\n        const updateStatus = await dataSources.orderAPI.updateOrder(\r\n          orderid,\r\n          status\r\n        );\r\n        // console.log(\"New Order Created: \", newOrder);\r\n        const statusMessage = UpdateMessage.safeParse(updateStatus);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: statusMessage.success\r\n            ? statusMessage.data.message\r\n            : \"Invalid return message\",\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error updating order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n        };\r\n      }\r\n    },\r\n    cancelOrder: async (_, { orderid }, { dataSources }) => {\r\n      // console.log(\"create order: \", cart, \" value: \", value);\r\n\r\n      try {\r\n        const cancelStatus = await dataSources.orderAPI.cancelOrder(orderid);\r\n\r\n        const statusMessage = UpdateMessage.safeParse(cancelStatus);\r\n\r\n        // console.log(\"New Order Created: \", newOrder);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: statusMessage.success\r\n            ? statusMessage.data.message\r\n            : \"Invalid return message\",\r\n          // message: cancelStatus?.message as string,\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error cancelling order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n        };\r\n      }\r\n    },\r\n    completeOrder: async (_, { orderid, shipping }, { dataSources }) => {\r\n      // console.log(\"create order: \", cart, \" value: \", value);\r\n\r\n      try {\r\n        const completeStatus = await dataSources.orderAPI.completeOrder(\r\n          orderid,\r\n          shipping\r\n        );\r\n\r\n        const statusMessage = UpdateMessage.safeParse(completeStatus);\r\n\r\n        // console.log(\"New Order Created: \", newOrder);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: statusMessage.success\r\n            ? statusMessage.data.message\r\n            : \"Invalid return message\",\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error cancelling order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n        };\r\n      }\r\n    },\r\n    createAddress: async (_, { input }, { dataSources }) => {\r\n      // console.log(\"create order: \", cart, \" value: \", value);\r\n\r\n      try {\r\n        const address = await dataSources.orderAPI.createAddress(input);\r\n        // console.log(\"New Order Created: \", newOrder);\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Address created successfully\",\r\n          order: address,\r\n        };\r\n      } catch (error: any) {\r\n        console.error(\"Error creating order:\", error);\r\n        return {\r\n          code: error.extensions?.response?.status || 500,\r\n          success: false,\r\n          message: error.extensions?.response?.body || \"Internal Server Error\",\r\n          order: null,\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types\";\r\n\r\nexport const stockResolvers: Resolvers = {\r\n  Query: {\r\n    stockById: (_, { stockid }, { dataSources }) => {\r\n      return dataSources.stockAPI.getStockById(stockid);\r\n    },\r\n    stockByItemId: (_, { itemid }, { dataSources }) => {\r\n      return dataSources.stockAPI.getStockByItemId(itemid);\r\n    },\r\n    stockByItemType: (_, { itemType }, { dataSources }) => {\r\n      return dataSources.stockAPI.getStockByItemType(itemType);\r\n    },\r\n  },\r\n  ItemStock: {\r\n    item: ({ itemid }, _, { dataSources }) => {\r\n      return dataSources.itemAPI.getPart(itemid);\r\n    },\r\n  },\r\n  Mutation: {\r\n    createStock: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        // console.log(\"New item created: \", input);\r\n        const newStockItem = await dataSources.stockAPI.createStock(input);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item created successfully\",\r\n          item: newStockItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    updateStock: async (_, { input }, { dataSources }) => {\r\n      try {\r\n        const editStockItem = await dataSources.stockAPI.updateStock(input);\r\n        // console.log(\"New item created: \", newItem);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item updated successfully\",\r\n          item: editStockItem,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: null,\r\n        };\r\n      }\r\n    },\r\n    deleteStock: async (_, { stockId }, { dataSources }) => {\r\n      try {\r\n        const message = await dataSources.stockAPI.deleteStock(stockId);\r\n        // console.log(\"return value: \", message);\r\n\r\n        return {\r\n          code: 200,\r\n          success: true,\r\n          message: \"Item deleted successfully\",\r\n          item: message as string,\r\n        };\r\n      } catch (err: any) {\r\n        return {\r\n          code: err.extensions.response.status,\r\n          success: false,\r\n          message: err.extensions.response.body,\r\n          item: \"\",\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n", "import { Resolvers } from \"../../types/types.js\";\r\nimport { authResolvers } from \"./auth-resolver.js\";\r\nimport { billResolvers } from \"./bill-resolver.js\";\r\nimport { cartResolvers } from \"./cart-resolver.js\";\r\nimport { itemResolvers } from \"./item-resolver.js\";\r\nimport { orderResolvers } from \"./order-resolver.js\";\r\nimport { stockResolvers } from \"./stock-resolver.js\";\r\n\r\nexport const rootResolvers: Resolvers = {\r\n  Query: {\r\n    ...itemResolvers.Query,\r\n    ...stockResolvers.Query,\r\n    ...billResolvers.Query,\r\n    ...authResolvers.Query,\r\n    ...cartResolvers.Query,\r\n    ...orderResolvers.Query,\r\n  },\r\n  Mutation: {\r\n    ...itemResolvers.Mutation,\r\n    ...stockResolvers.Mutation,\r\n    ...billResolvers.Mutation,\r\n    ...authResolvers.Mutation,\r\n    ...cartResolvers.Mutation,\r\n    ...orderResolvers.Mutation,\r\n  },\r\n  Part: {\r\n    ...itemResolvers.Part,\r\n  },\r\n  LikeItem: {\r\n    ...itemResolvers.LikeItem,\r\n  },\r\n  CartItem: {\r\n    ...cartResolvers.CartItem,\r\n  },\r\n  OrderItem: {\r\n    ...orderResolvers.OrderItem,\r\n  },\r\n  OrderEntry: {\r\n    ...orderResolvers.OrderEntry,\r\n  },\r\n  ItemStock: {\r\n    ...stockResolvers.ItemStock,\r\n  },\r\n};\r\n", "// import jose, { JWE, JWK, JWS } from \"node-jose\";\r\n// import fs from \"fs\";\r\n// import { error } from \"console\";\r\n// import { result } from \"lodash\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport jose from \"node-jose\";\r\n\r\nconst { JWE, JWK, JWS } = jose;\r\n\r\nconst joseutils = () => {\r\n  // const privateKey = fs.readFileSync(\"private_key.pem\");\r\n  // const publicKey = fs.readFileSync(\"public_key.pem\");\r\n\r\n  const privateKey = process.env.JWT_PRIVATEKEY;\r\n  const publicKey = process.env.JWT_PUBLICKEY;\r\n\r\n  async function getKeys() {\r\n    // const makeKey = async (pem: Buffer<ArrayBufferLike>) => await JWK.asKey(pem, \"pem\");\r\n    const makeKey = async (pem: string) => await JWK.asKey(pem, \"pem\");\r\n\r\n    const pub_key = await makeKey(publicKey as string);\r\n    const prv_key = await makeKey(privateKey as string);\r\n\r\n    // console.log(\"public: \", pub_key, \"private: \", prv_key);\r\n    \r\n\r\n    return { pub_key, prv_key };\r\n  }\r\n\r\n  async function sign(raw: unknown) {\r\n    const { prv_key } = await getKeys();\r\n\r\n    if (!raw) {\r\n      throw new Error(\"Missing Data\");\r\n    }\r\n\r\n    const inputBuffer = JSON.stringify(raw);\r\n\r\n    const jwsToken = await JWS.createSign({ format: \"compact\" }, prv_key)\r\n      .update(inputBuffer)\r\n      .final()\r\n      .then(function (result) {\r\n        return result;\r\n      });\r\n\r\n    return jwsToken;\r\n  }\r\n\r\n  async function verify(jwsToken: string) {\r\n    const { pub_key } = await getKeys();\r\n\r\n    if (!jwsToken) {\r\n      throw new Error(\"Missing JWS Token\");\r\n    }\r\n\r\n    // const inputBuffer = JSON.stringify(raw);\r\n\r\n    const verifyResult = await JWS.createVerify(pub_key)\r\n      .verify(jwsToken)\r\n      .then((result) => {\r\n        const buffertoString = jose.util.base64url.encode(result.payload);\r\n        // console.log(\"string converted\", buffertoString);\r\n        \r\n        return jwtDecode(buffertoString, { header: true });\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"returned \", error);\r\n      });\r\n\r\n    return verifyResult;\r\n  }\r\n\r\n  async function encrypt(raw: unknown) {\r\n    const { pub_key } = await getKeys();\r\n\r\n    if (!raw) {\r\n      throw new Error(\"Missing Data\");\r\n    }\r\n    const inputBuffer = JSON.stringify(raw);\r\n    return await JWE.createEncrypt(pub_key).update(inputBuffer).final();\r\n  }\r\n\r\n  async function decrypt(encrypted: string) {\r\n    const { prv_key } = await getKeys();\r\n    if (!encrypted) {\r\n      throw new Error(\"Missing encrypted arg\");\r\n    }\r\n    // const buffer = Buffer.from(JSON.stringify(encrypted));\r\n    return await JWE.createDecrypt(prv_key).decrypt(encrypted);\r\n  }\r\n\r\n  return { encrypt, decrypt, sign, verify };\r\n};\r\n\r\nexport default joseutils;\r\n", "// import jose, { JWK } from \"node-jose\";\r\n\r\nimport joseutils from \"./jose-calls.js\";\r\nimport { UserPayload } from \"./types.js\";\r\n\r\n// const keystore = jose.JWK.createKeyStore();\r\n\r\nconst { encrypt, decrypt, sign, verify } = joseutils();\r\n\r\nexport async function generateUserToken(raw: UserPayload) {\r\n  const signedData = await sign(raw);\r\n  return signedData.toString();\r\n}\r\n\r\nexport async function verifyUserToken(tokenString: string) {\r\n  const verification = await verify(tokenString);\r\n  return verification;\r\n}\r\n\r\nexport async function encryptData(raw: unknown) {\r\n  const signedData = await sign(raw);\r\n\r\n  const verification = await verify(signedData.toString());\r\n\r\n  // console.log(\"final man: \", verification);\r\n\r\n  const encryptedData = encrypt(raw);\r\n\r\n  const decryptedData = await encryptedData.then((encrypted) =>\r\n    decrypt(encrypted)\r\n  );\r\n\r\n  // const output = jose.util.base64url.encode(decryptedData.plaintext);\r\n}\r\n", "import { z } from \"zod\";\r\nimport validator from \"validator\";\r\n\r\nconst { isEmail, isMobilePhone } = validator;\r\n\r\nexport const validCredentialsSchema = z.object({\r\n  email: z.string().refine(isEmail, { message: \"Invalid email address\" }),\r\n  password: z.string().min(6).max(20),\r\n  firstName: z.string().min(4),\r\n  lastName: z.string().min(4),\r\n  phone: z.string().refine(isMobilePhone, { message: \"Invalid phone number\" }),\r\n});\r\n\r\nexport type ValidCredentials = z.infer<typeof validCredentialsSchema>;\r\n\r\nexport const loginParamsSchema = z.object({\r\n  email: z.string().refine(isEmail, { message: \"Invalid email address\" }),\r\n  password: z.string().min(6).max(20),\r\n});\r\n\r\nexport type LoginParams = z.infer<typeof loginParamsSchema>;\r\n\r\nexport const userPayloadSchema = z.object({\r\n  id: z.string(),\r\n  email: z.string().email(),\r\n  firstName: z.string(),\r\n  lastName: z.string(),\r\n});\r\n\r\nexport type UserPayload = z.infer<typeof userPayloadSchema>;\r\n\r\nexport const cartItemSchema = z.object({\r\n  itemid: z.string(),\r\n  itemtype: z.string(),\r\n  itemModel: z.string(),\r\n  name: z.string(),\r\n  quantity: z.number(),\r\n  totalPrice: z.number(),\r\n  price: z.number(),\r\n});\r\n\r\nexport type CartItem = z.infer<typeof cartItemSchema>;\r\n\r\nexport const userCartSchema = z.object({\r\n  userId: z.string(),\r\n  items: z.array(cartItemSchema),\r\n  firstName: z.string(),\r\n  lastName: z.string(),\r\n});\r\n\r\nexport type UserCart = z.infer<typeof userCartSchema>;\r\n", "import mongoose from \"mongoose\";\r\nimport { Password } from \"../services/password.js\";\r\n\r\n// An interface that describes the properties that are required to Create a User\r\ninterface UserAttrs {\r\n  email: string;\r\n  phone: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  // access: string;\r\n}\r\n\r\n// An interface that describes the properties that a User Model has\r\ninterface UserModel extends mongoose.Model<UserDoc> {\r\n  build(attrs: UserAttrs): UserDoc;\r\n}\r\n\r\n// An interface that describes the properties that a User Document has\r\nexport interface UserDoc extends mongoose.Document {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  password: string;\r\n  access: string;\r\n}\r\n\r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    phone: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    access: {\r\n      type: String,\r\n      default: \"user\",\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n        delete ret.password;\r\n        delete ret.__v;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nuserSchema.pre(\"save\", async function (done) {\r\n  if (this.isModified(\"password\")) {\r\n    const hashed = await Password.toHash(this.get(\"password\"));\r\n    this.set(\"password\", hashed);\r\n  }\r\n  done();\r\n});\r\n\r\nuserSchema.statics.build = (attrs: UserAttrs) => {\r\n  return new User(attrs);\r\n};\r\n\r\nconst User = mongoose.model<UserDoc, UserModel>(\"User\", userSchema);\r\n\r\nexport { User };\r\n", "import { scrypt, randomBytes } from \"crypto\";\r\nimport { promisify } from \"util\";\r\n\r\nconst scryptAsync = promisify(scrypt);\r\n\r\nexport class Password {\r\n  static async toHash(password: string) {\r\n    const salt = randomBytes(8).toString(\"hex\");\r\n    const buf = (await scryptAsync(password, salt, 64)) as Buffer;\r\n    return `${buf.toString(\"hex\")}.${salt}`;\r\n  }\r\n\r\n  static async compare(storedPassword: string, suppliedPassword: string) {\r\n    const [hashedPassword, salt] = storedPassword.split(\".\");\r\n    const buf = (await scryptAsync(suppliedPassword, salt, 64)) as Buffer;\r\n    return buf.toString(\"hex\") === hashedPassword;\r\n  }\r\n}\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { verifyUserToken } from \"../lib/session.js\";\r\nimport { userPayloadSchema } from \"../lib/types.js\";\r\nimport { User } from \"../auth/models/user.js\";\r\nimport { BadRequestError } from \"@manprtickets/common\";\r\nimport mongoose from \"mongoose\";\r\nimport { log } from \"console\";\r\n\r\nexport const currentUser = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"session: \", req.session.jwt);\r\n\r\n\r\n\r\n  if (!req.session?.jwt) {\r\n    return next();\r\n  }\r\n\r\n  try {\r\n    // console.log(\"entering into verify\");\r\n\r\n    const payload = await verifyUserToken(req.session.jwt);\r\n\r\n    // log(\"Payload: \", payload);\r\n    const { id, email, firstName, lastName } = userPayloadSchema.parse({\r\n      ...payload,\r\n      // first_name: \"Toji\",\r\n      // last_name: \"Varghese\",\r\n    });\r\n    // console.log(\"id: \", id, \" email: \", email);\r\n\r\n    const existingUser = await User.findOne({ email }); // _id: new mongoose.Types.ObjectId(id)\r\n    // console.log(\"Existing user: \", existingUser);\r\n\r\n    if (!existingUser) {\r\n      throw new BadRequestError(\"Sorry you are not a valid user in the System\");\r\n    }\r\n    req.currentUser = {\r\n      id: existingUser.id,\r\n      email: existingUser.email,\r\n      // firstName: existingUser.firstName,\r\n      // lastName: existingUser.lastName,\r\n    };\r\n  } catch (error) {}\r\n\r\n  next();\r\n};\r\n", "import express from \"express\";\r\nimport { body } from \"express-validator\";\r\n\r\nimport getCurrentUser from \"./current-user.js\";\r\nimport postSignin from \"./signin.js\";\r\nimport postSignout from \"./signout.js\";\r\nimport postSignup from \"./signup.js\";\r\nimport { validateRequest } from \"@manprtickets/common\";\r\nimport { Request, Response, NextFunction } from \"express\";\r\nimport { getUserById } from \"./index.js\";\r\n// import { currentUser } from \"../middleware/current-user.ts.old\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/currentuser\", getCurrentUser);\r\nrouter.get(\"/:id\", getUserById);\r\nrouter.post(\r\n  \"/signin\",\r\n  // async (req: Request, res: Response, next: NextFunction) => {\r\n  //   console.log(req.body);\r\n  //   next();\r\n  // },\r\n  [\r\n    body(\"email\").isEmail().withMessage(\"Email must be valid\"),\r\n    body(\"password\")\r\n      .trim()\r\n      .notEmpty()\r\n      .withMessage(\"You must supply a password\"),\r\n  ],\r\n  validateRequest,\r\n  postSignin\r\n);\r\nrouter.post(\"/signout\", postSignout);\r\nrouter.post(\r\n  \"/signup\",\r\n  // [\r\n  //   body(\"email\").isEmail().withMessage(\"Email must be valid\"),\r\n  //   body(\"password\")\r\n  //     .trim()\r\n  //     .isLength({ min: 6, max: 20 })\r\n  //     .withMessage(\"Password must be between 6 and 20 characters\"),\r\n  // ],\r\n  // validateRequest,\r\n  postSignup\r\n);\r\n\r\nexport { router as authRouter };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { userPayloadSchema } from \"../../lib/types.js\";\r\nimport { NotAuthorizedError } from \"@manprtickets/common\";\r\n\r\nconst getCurrentUser = (req: Request, res: Response) => {\r\n\r\n  // console.log(\"entry into current user route: \", req.currentUser);\r\n  \r\n  // res.send({ currentUser: req.currentUser || null });\r\n  const user =  req.currentUser && userPayloadSchema.safeParse(req.currentUser);\r\n\r\n  // console.log(\"user: \", user);\r\n  \r\n\r\n  if (user) {\r\n    // throw new NotAuthorizedError();\r\n    res.send(user.data);\r\n  } else {\r\n    res.send(null);\r\n  }\r\n};\r\n\r\nexport default getCurrentUser;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { BadRequestError } from \"@manprtickets/common\";\r\nimport { User } from \"../models/user.js\";\r\nimport { Password } from \"../services/password.js\";\r\nimport { generateUserToken } from \"../../lib/session.js\";\r\n// import { decrypt, encrypt, sign, verify } from \"../../lib/session\";\r\n// import jose from \"node-jose\";\r\n// import fs from \"fs\";\r\n\r\n// const publicKey = fs.readFileSync(\"public_key.pem\");\r\n// const keystore = jose.JWK.createKeyStore();\r\n\r\n// const publicStoreKey = keystore.add(publicKey, \"pem\").then(function (result) {\r\n//   return result;\r\n// });\r\n// import jwt from \"jsonwebtoken\";\r\n\r\n// declare module \"express-session\" {\r\n//   interface SessionData {\r\n//     message: string;\r\n//     jwt: string;\r\n//     isAuthenticated: boolean;\r\n//     userid: unknown;\r\n//     useremail: string;\r\n//   }\r\n// }\r\n\r\nconst postSignin = async (req: Request, res: Response, next: NextFunction) => {\r\n  const { email, password } = req.body;\r\n\r\n  // console.log(\"email in auth logs in: \", email, \"password: \", password);\r\n\r\n  const existingUser = await User.findOne({ email });\r\n  if (!existingUser) {\r\n    throw new BadRequestError(\"Sorry you entered wrong login Credentials\");\r\n  }\r\n  const passwordsMatch = await Password.compare(\r\n    existingUser.password,\r\n    password\r\n  );\r\n\r\n  if (!passwordsMatch) {\r\n    throw new BadRequestError(\"Invalid Credentials\");\r\n  }\r\n\r\n  // console.log(\"existing user: \", existingUser);\r\n  \r\n\r\n  // sign, create token and send the token to session\r\n\r\n  // const userJwt = await encryptData({\r\n  //   id: \"675d263dab93ec2b8dc1cb53\",\r\n  //   email: \"tester11@test.com\",\r\n  // });\r\n\r\n  const userJwt = await generateUserToken({\r\n    id: existingUser.id,\r\n    email: existingUser.email,\r\n    firstName: existingUser.firstName,\r\n    lastName: existingUser.lastName,\r\n    // first_name: \"Toji\",\r\n    // last_name: \"Varghese\",\r\n  });\r\n\r\n  // console.log(\"returned token: \", userJwt);\r\n\r\n  req.session.jwt = userJwt;\r\n\r\n  // req.session.jwt = userJwt;\r\n  // req.session.isAuthenticated = true;\r\n  // req.session.userid = existingUser.id;\r\n  // req.session.useremail = existingUser.email;\r\n\r\n  // res.cookie(\"session\", userJwt, {\r\n  //   httpOnly: false,\r\n  //   // secure: true,\r\n  //   sameSite: \"none\", // Enforce secure cookies & // Prevent CSRF attacks by setting sameSite\r\n  //   maxAge: 1 * 24 * 60 * 60 * 1000, // 1 days\r\n  //   path: '/'\r\n  // });\r\n\r\n  res.status(200).send({\r\n    user: {\r\n      id: existingUser.id,\r\n      firstName: existingUser.firstName,\r\n      lastName: existingUser.lastName,\r\n      email: existingUser.email,\r\n      phone: existingUser.phone,\r\n    },\r\n    token: userJwt,\r\n  });\r\n};\r\n\r\nexport default postSignin;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\n\r\nconst postSignout = (req: Request, res: Response, next: NextFunction) => {\r\n  // console.log(\"inside signout\");\r\n\r\n  req.currentUser = undefined;\r\n  req.session.jwt = \"\";\r\n  req.session.destroy((err) => {\r\n    if (err) {\r\n      console.log(err);\r\n      // return res.redirect(\"/\");\r\n    }\r\n    // console.log(\"current user: \", req.currentUser);\r\n    // res.clearCookie(\"jwt\");\r\n    res.send({});\r\n  });\r\n};\r\n\r\nexport default postSignout;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { BadRequestError } from \"@manprtickets/common\";\r\n// import jwt from \"jsonwebtoken\";\r\nimport { User } from \"../models/user.js\";\r\nimport { generateUserToken } from \"../../lib/session.js\";\r\nimport { validCredentialsSchema } from \"../../lib/types.js\";\r\n\r\nconst postSignup = async (req: Request, res: Response, next: NextFunction) => {\r\n  // const { email, password, first_name, last_name } = req.body;\r\n\r\n  const user_valid = validCredentialsSchema.safeParse(req.body);\r\n\r\n  if (!user_valid.success) {\r\n    return res.status(400).send(user_valid.error);\r\n  }\r\n  const { email, password, firstName, lastName, phone } = user_valid.data;\r\n\r\n  // console.log(\"email in auth signup: \", email, \"name: \", firstName, lastName);\r\n\r\n  const existingUser = await User.findOne({ email });\r\n\r\n  if (existingUser) {\r\n    throw new BadRequestError(\"Email in use\");\r\n  }\r\n  // console.log(\"existing user: \", existingUser);\r\n\r\n  const user = User.build({ email, password, firstName, lastName, phone });\r\n  // console.log(\"user: \", user);\r\n\r\n  await user.save();\r\n\r\n  // Generate JWT\r\n  // const userJwt = jwt.sign(\r\n  //   {\r\n  //     id: user.id,\r\n  //     email: user.email,\r\n  //   },\r\n  //   process.env.JWT_KEY!\r\n  // );\r\n  const userJwt = await generateUserToken({\r\n    id: user.id,\r\n    email: user.email,\r\n    firstName: user.firstName,\r\n    lastName: user.lastName,\r\n  });\r\n\r\n  // Store it on session object\r\n  req.session.jwt = userJwt;\r\n  // req.session = {\r\n  //   jwt: userJwt,\r\n  // };\r\n\r\n  res.status(200).send({\r\n    user: {\r\n      id: user.id,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      phone: user.phone,\r\n    },\r\n    token: userJwt,\r\n  });\r\n\r\n  // res.status(201).send(user);\r\n};\r\n\r\nexport default postSignup;\r\n", "import { NextFunction, Request, Response } from \"express\";\r\nimport { User } from \"../models/user\";\r\n\r\nexport const getUserById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const selectedUser = await User.findById(req.params.id);\r\n\r\n//   console.log(\"selected user: \", selectedUser);\r\n\r\n  res.send(selectedUser);\r\n};\r\n", "import { requireAuth } from \"@manprtickets/common\";\r\nimport express from \"express\";\r\nimport createNewItem from \"./new.js\";\r\nimport { getItemById, getItemBySearch, selectItemsByType } from \"./index.js\";\r\nimport updateItem from \"./update.js\";\r\nimport { deleteItemById } from \"./delete.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/search/:itemtype/:keystr\", getItemBySearch);\r\nrouter.get(\"/:idstr\", getItemById);\r\nrouter.get(\"/select/:typeStr\", selectItemsByType);\r\n\r\nrouter.post(\"/new\", requireAuth, createNewItem);\r\nrouter.put(\"/:id\", requireAuth, updateItem);\r\nrouter.delete(\"/:id\", requireAuth, deleteItemById);\r\n\r\n\r\nexport { router as itemRouter };\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst units = [\"No\", \"Kg\", \"Lts\", \"mm\", \"cm\", \"meter\"];\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\", \"Category\"];\r\n\r\ninterface ItemAttrs {\r\n  itemType: string;\r\n  title: string;\r\n  description: string;\r\n  image?: string;\r\n  userId: string;\r\n}\r\n\r\ninterface ItemDoc extends mongoose.Document {\r\n  itemType: string;\r\n  title: string;\r\n  description: string;\r\n  image?: string;\r\n  userId: string;\r\n}\r\n\r\n// interface ProductAttrs {\r\n//   title: string;\r\n//   description: string;\r\n//   image?: string;\r\n//   userId: string;\r\n//   unit: string;\r\n//   dimensions: string;\r\n// }\r\n\r\n// interface ProductDoc extends mongoose.Document {\r\n//   title: string;\r\n//   description: string;\r\n//   image?: string;\r\n//   userId: string;\r\n//   unit: string;\r\n//   dimensions: string;\r\n// }\r\n\r\ninterface ItemModel extends mongoose.Model<ItemDoc> {\r\n  build(attrs: ItemAttrs): ItemDoc;\r\n}\r\n\r\n// interface ProductModel extends mongoose.Model<ProductDoc> {\r\n//   build(attrs: ProductAttrs): ProductDoc;\r\n// }\r\n\r\nconst itemSchema = new Schema(\r\n  {\r\n    itemType: { type: String, enum: itemtypes, required: true, index: true },\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    image: {\r\n      type: String,\r\n    },\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    discriminatorKey: \"itemType\",\r\n    collection: \"items\",\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nitemSchema.statics.build = (attrs: ItemAttrs) => {\r\n  return new Item(attrs);\r\n};\r\n\r\nconst Item = mongoose.model<ItemDoc, ItemModel>(\"Item\", itemSchema);\r\n\r\nconst productSchema = new Schema({\r\n  unit: {\r\n    type: String,\r\n    enum: units,\r\n    required: true,\r\n  },\r\n  dimensions: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst categorySchema = new Schema({});\r\nconst equimentSchema = new Schema({\r\n  dimensions: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\nconst packageSchema = new Schema({\r\n  dimensions: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\nconst spareSchema = new Schema({\r\n  dimensions: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\n\r\nitemSchema.index({ title: \"text\", description: \"text\", dimensions: \"text\" });\r\n\r\n// const Product = Item.discriminator<ProductDoc, ProductModel>(\"Product\", productSchema);\r\n\r\nconst Category = Item.discriminator(\"Category\", categorySchema);\r\nconst Product = Item.discriminator(\"Product\", productSchema);\r\nconst Equipment = Item.discriminator(\"Equipment\", equimentSchema);\r\nconst Package = Item.discriminator(\"Package\", packageSchema);\r\nconst Spare = Item.discriminator(\"Spare\", spareSchema);\r\n\r\nexport { Item, Product, Equipment, Package, Spare, Category };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport {\r\n  Category,\r\n  Equipment,\r\n  Item,\r\n  Package,\r\n  Product,\r\n  Spare,\r\n} from \"../models/item.js\";\r\n\r\nconst createNewItem = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const { title, unit, dimensions, description, image, itemType } = req.body;\r\n\r\n    // console.log(\"new product: \", itemType, \" body: \", req.body);\r\n\r\n  let newObject = null;\r\n\r\n  try {\r\n    switch (itemType) {\r\n      case \"Product\":\r\n        newObject = new Product({ itemType, title, description, image, unit, dimensions, userId: req.currentUser!.id });\r\n        break;\r\n      case \"Equipment\":\r\n        newObject = new Equipment({ itemType, title, description, image, dimensions, userId: req.currentUser!.id });\r\n        break;\r\n      case \"Category\":\r\n        newObject = new Category({ itemType, title, description, image, userId: req.currentUser!.id });\r\n        break;\r\n      case \"Package\":\r\n        newObject = new Package({ itemType, title, description, image, dimensions, userId: req.currentUser!.id });\r\n        break;\r\n      case \"Spare\":\r\n        newObject = new Spare({ itemType, title, description, image, dimensions, userId: req.currentUser!.id });\r\n        break;\r\n    }\r\n\r\n    await newObject?.save();\r\n    // console.log(\"product saved\", newObject);\r\n    res.status(201).send(newObject);\r\n  } catch (error) {\r\n    console.log(\"errors in creation of item: \", error);\r\n  }\r\n};\r\n\r\nexport default createNewItem;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Item } from \"../models/item.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nexport const getItemBySearch = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  let products;\r\n\r\n  const searchString = req.params.keystr;\r\n  const itemType = req.params.itemtype;\r\n  // console.log(\" search: \", searchString, \" type: \", itemType);\r\n\r\n  let aggregate = Item.aggregate([\r\n    { $match: { itemType: itemType } },\r\n    { $addFields: { id: \"$_id\" } },\r\n  ]);\r\n\r\n  if (searchString !== \"all\") {\r\n    aggregate = Item.aggregate([\r\n      { $match: { itemType: itemType, $text: { $search: searchString } } },\r\n      { $addFields: { id: \"$_id\" } },\r\n    ]);\r\n  }\r\n  const results = await aggregate.exec();\r\n\r\n  // console.log(\"results: \", results);\r\n\r\n  //   res.status(200).send(products);\r\n  res.status(200).send(results);\r\n};\r\n\r\nexport const getItemById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const itemId = req.params.idstr;\r\n  // console.log(\"in getItemById:\", itemId);\r\n\r\n  const itemObject = await Item.findById(itemId);\r\n  // console.log(\"result: \", itemObject);\r\n\r\n  res.status(200).send(itemObject);\r\n};\r\n\r\nexport const selectItemsByType = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const itemType = req.params.typeStr;\r\n\r\n  const items = await Item.find(\r\n    { itemType },\r\n    { key: \"$_id\", label: \"$title\", _id: 0 }\r\n  );\r\n\r\n  // console.log(\"select: \", itemType, \" list: \", items);\r\n\r\n  res.send(items);\r\n};\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\nimport validator from \"validator\";\r\nimport { Item } from \"../models/item.js\";\r\n\r\nconst { isEmpty } = validator;\r\n\r\nconst updateItem = async (req: Request, res: Response, next: NextFunction) => {\r\n  const _id = req.params.id;\r\n  const { title, unit, dimensions, description, image, itemType } = req.body;\r\n\r\n  // console.log(\"request body: \", req.body);\r\n\r\n  const exitingItem = await Item.findOne({ _id });\r\n\r\n  if (!exitingItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (exitingItem.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  // let updatedObject = null;\r\n  exitingItem.set({\r\n    title: title,\r\n    description: description,\r\n    // dimensions: dimensions,\r\n    // unit: unit,\r\n    image: isEmpty(image) ? exitingItem.image : image,\r\n  });\r\n\r\n  try {\r\n    switch (itemType) {\r\n      case \"Product\":\r\n        exitingItem.set({\r\n          // title: title,\r\n          // description: description,\r\n          dimensions: dimensions,\r\n          unit: unit,\r\n          // image: isEmpty(image) ? exitingItem.image : image,\r\n        });\r\n        break;\r\n      case \"Equipment\":\r\n        exitingItem.set({\r\n          // title: title,\r\n          // description: description,\r\n          dimensions: dimensions,\r\n          // unit: unit,\r\n          // image: isEmpty(image) ? exitingItem.image : image,\r\n        });\r\n        break;\r\n      case \"Category\":\r\n        // exitingItem.set({\r\n        //   title: title,\r\n        //   description: description,\r\n        //   image: isEmpty(image) ? exitingItem.image : image,\r\n        // });\r\n        break;\r\n      case \"Package\":\r\n        exitingItem.set({\r\n          // title: title,\r\n          // description: description,\r\n          dimensions: dimensions,\r\n          // image: isEmpty(image) ? exitingItem.image : image,\r\n        });\r\n        break;\r\n      case \"Spare\":\r\n        exitingItem.set({\r\n          // title: title,\r\n          // description: description,\r\n          dimensions: dimensions,\r\n          // image: isEmpty(image) ? exitingItem.image : image,\r\n        });\r\n        break;\r\n    }\r\n\r\n    await exitingItem.save();\r\n\r\n    res.status(201).send(exitingItem);\r\n  } catch (error) {\r\n    console.log(\"errors in updation of item: \", error);\r\n  }\r\n};\r\n\r\nexport default updateItem;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\nimport { Item } from \"../models/item.js\";\r\n\r\nexport const deleteItemById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const itemid = req.params.id;\r\n\r\n//   console.log(\"id received: \", itemid);\r\n\r\n  const deleteItem = await Item.findById(itemid);\r\n\r\n//   console.log(\"product to be deleted: \", deleteItem);\r\n\r\n  if (!deleteItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (deleteItem.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  const { deletedCount } = await Item.deleteOne({ _id: itemid });\r\n\r\n//   console.log(deletedCount);\r\n\r\n  res\r\n    .status(201)\r\n    .send(`${deletedCount} Item deleted successfully`);\r\n};", "import express from \"express\";\r\n\r\nimport { requireAuth, validateRequest } from \"@manprtickets/common\";\r\nimport { body } from \"express-validator\";\r\nimport { assignItemsToCategory, getAssignments } from \"./assign\";\r\nimport { getAssignedParts } from \".\";\r\n\r\nconst router = express.Router();\r\n\r\n// router.post(\r\n//   \"/new\",\r\n//   requireAuth,\r\n//   [\r\n//     body(\"itemid\").not().isEmpty().withMessage(\"ItemId is required\"),\r\n//     body(\"assignid\").not().isEmpty().withMessage(\"Assignment Ids are required\"),\r\n//     body(\"assignString\").not().isEmpty().withMessage(\"Category is required\"),\r\n//   ],\r\n//   validateRequest,\r\n//   assignProductsToCategory\r\n// );\r\n\r\nrouter.get(\"/:assign\", getAssignments);\r\nrouter.post(\"/assign/:idStr\", requireAuth, assignItemsToCategory);\r\nrouter.get(\"/:itemtype/:assignid\", getAssignedParts);\r\n\r\nexport { router as partRouter };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport {\r\n  NotAuthorizedError,\r\n  NotFoundError,\r\n  RequestValidationError,\r\n} from \"@manprtickets/common\";\r\nimport { Part } from \"../models/part\";\r\nimport { Item } from \"../../item/models/item\";\r\nimport mongoose from \"mongoose\";\r\nimport { MongoBulkWriteError } from \"mongodb\";\r\n\r\nexport const assignItemsToCategory = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"id string: \", req.params.idStr);\r\n\r\n  const selectedItem = await Item.findById(req.params.idStr);\r\n\r\n  if (!selectedItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (selectedItem.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  const { assignIDs, assign } = req.body;\r\n\r\n  // console.log(assignIDs, \" type: \", assign, \" selected: \", selectedItem);\r\n\r\n  try {\r\n    const partsDocs = assignIDs.map((id: string) => {\r\n      return {\r\n        itemid: selectedItem.id,\r\n        itemtype: selectedItem.itemType,\r\n        assignid: id,\r\n        assign: assign,\r\n        userId: req.currentUser!.id,\r\n      };\r\n    });\r\n\r\n    // console.log(partsDocs);\r\n\r\n    await Part.insertMany(partsDocs);\r\n  } catch (error) {\r\n    // console.log(\"error is here\");\r\n\r\n    if (error instanceof MongoBulkWriteError && error.code === 11000) {\r\n      throw RequestValidationError;\r\n    }\r\n    // // console.log(typeof error);\r\n  }\r\n\r\n  res\r\n    .status(201)\r\n    .send(`selected ${selectedItem.itemType} assigned to ${assign}`);\r\n};\r\n\r\nexport const getAssignments = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // const selectedItem = await Part.find({ itemid: req.params.idStr }).populate([\r\n  //   { path: \"itemid\", select: \"title description\" },\r\n  // ]);\r\n  // console.log(\"called me\");\r\n\r\n  const assign = req.params.assign;\r\n\r\n  // console.log(\"assign string: \", assign);\r\n\r\n  try {\r\n    const assignments = await Part.aggregate([\r\n      {\r\n        $match: { assignid: new mongoose.Types.ObjectId(assign) },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: \"items\",\r\n          localField: \"assignid\",\r\n          foreignField: \"_id\",\r\n          as: \"category\",\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: \"items\",\r\n          localField: \"itemid\",\r\n          foreignField: \"_id\",\r\n          as: \"parts\",\r\n        },\r\n      },\r\n      {\r\n        $unwind: \"$category\",\r\n      },\r\n      {\r\n        $unwind: \"$parts\",\r\n      },\r\n      {\r\n        $group: {\r\n          _id: { id: \"$category._id\", name: \"$category.title\" },\r\n          assigned: {\r\n            $push: {\r\n              id: \"$parts._id\",\r\n              itemType: \"$parts.itemType\",\r\n              title: \"$parts.title\",\r\n              description: \"$parts.description\",\r\n              image: \"$parts.image\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ]).exec();\r\n\r\n    // console.log(assignments);\r\n\r\n    res.status(201).send(assignments);\r\n  } catch (error) {\r\n    console.log(\"error in assignments: \", error);\r\n  }\r\n};\r\n\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\", \"Category\"];\r\n\r\ninterface PartAttrs {\r\n  itemid: string;\r\n  itemtype: string;\r\n  assignid: string;\r\n  assign: string;\r\n  userId: string;\r\n}\r\n\r\nexport interface PartDoc extends mongoose.Document {\r\n  id: string;\r\n  itemid: string;\r\n  itemtype: string;\r\n  assignid: string;\r\n  assign: string;\r\n  userId: string;\r\n  version: number;\r\n}\r\n\r\ninterface PartModel extends mongoose.Model<PartDoc> {\r\n  build(attrs: PartAttrs): PartDoc;\r\n}\r\n\r\n\r\nconst partSchema = new mongoose.Schema(\r\n  {\r\n    itemid: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Item\",\r\n      required: true,\r\n    },\r\n    itemtype: {\r\n      type: String,\r\n      enum: itemtypes,\r\n      // ref: \"Product\",\r\n      required: true,\r\n    },\r\n    assignid: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Item\",\r\n      required: true,\r\n    },\r\n    assign: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\npartSchema.index({ itemid: 1, assignid: 1 }, { unique: true });\r\n\r\npartSchema.statics.build = (attrs: PartAttrs) => {\r\n  return new Part(attrs);\r\n};\r\n\r\nconst Part = mongoose.model<PartDoc, PartModel>(\"Part\", partSchema);\r\n\r\nexport { Part };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Part } from \"../../part/models/part\";\r\nimport mongoose from \"mongoose\";\r\nimport { assign } from \"lodash\";\r\n\r\nexport const getAssignedParts = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const assign_id = req.params.assignid;\r\n    const item_type = req.params.itemtype;\r\n\r\n    // console.log(\"assign_id: \", assign_id, \" item type: \", item_type);\r\n\r\n    // const parts = await Part.find({ assignid: assign_id, itemtype: item_type });\r\n\r\n    const parts = await Part.aggregate([\r\n      {\r\n        $match: {\r\n          //   $expr: { $eq: [\"$assignid\", { $toObjectId: assign_id }] },\r\n\r\n          $and: [\r\n            { itemtype: item_type },\r\n            { assignid: new mongoose.Types.ObjectId(assign_id) },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          itemid: { $toString: \"$itemid\" },\r\n          itemtype: 1,\r\n          assignid: { $toString: \"$assignid\" },\r\n          assign: 1,\r\n          id: { $toString: \"$_id\" },\r\n        },\r\n      },\r\n    ]);\r\n\r\n    // console.log(\"parts: \", parts);\r\n\r\n    // const products = await Part.aggregate([\r\n    //   {\r\n    // $match: {\r\n    //   assignid: assign_id,\r\n    //   assignstring: assign_type,\r\n    // },\r\n    //   },\r\n    //   { $addFields: { prodId: { $toObjectId: \"$itemid\" } } },\r\n    //   { $project: { _id: 0, prodId: 1, itemid: 1 } },\r\n    //   {\r\n    //     $lookup: {\r\n    //       from: \"items\",\r\n    //       localField: \"itemid\",\r\n    //       foreignField: \"_id\",\r\n    //       as: \"result\",\r\n    //     },\r\n    //   },\r\n    //   { $unwind: { path: \"$result\" } },\r\n    //   {\r\n    //     $project: {\r\n    //       id: \"$itemid\",\r\n    //       title: \"$result.title\",\r\n    //       image: \"$result.image\",\r\n    //       type: \"Product\",\r\n    //     },\r\n    //   },\r\n    // ]);\r\n\r\n    // console.log(\"products: \", products);\r\n    res.status(201).send(parts);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n", "import express from \"express\";\r\nimport { requireAuth} from \"@manprtickets/common\";\r\nimport getLikes from \"./index.js\";\r\nimport changeLike from \"./update.js\";\r\n\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", requireAuth, getLikes);\r\nrouter.patch(\"/:itemid\", requireAuth, changeLike);\r\n\r\n\r\n\r\nexport { router as likeRouter };\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\"];\r\n\r\ninterface LikeAttrs {\r\n  itemId: string;\r\n  userId: string;\r\n  // itemType: string;\r\n  // itemModel: string;\r\n}\r\n\r\nexport interface LikeDoc extends mongoose.Document {\r\n  id: string;\r\n  itemId: string;\r\n  userId: string;\r\n  // itemType: string;\r\n  // itemModel: string;\r\n}\r\n\r\ninterface LikeModel extends mongoose.Model<LikeDoc> {\r\n  build(attrs: LikeAttrs): LikeDoc;\r\n}\r\n\r\nconst likeSchema = new mongoose.Schema(\r\n  {\r\n    itemId: {\r\n      type: Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"Item\",\r\n    },\r\n    // itemType: {\r\n    //   type: String,\r\n    //   enum: itemtypes,\r\n    //   required: true,\r\n    // },\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    // itemModel: {\r\n    //   type: String,\r\n    //   required: true,\r\n    //   enum: itemtypes,\r\n    // },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nlikeSchema.statics.build = (attrs: LikeAttrs) => {\r\n  return new Like(attrs);\r\n};\r\n\r\nconst Like = mongoose.model<LikeDoc, LikeModel>(\"Like\", likeSchema);\r\n\r\nexport { Like };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Like } from \"../models/like.js\";\r\n\r\nconst getLikes = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const likes = await Like.find({ userId: req.currentUser?.id }, 'itemId userId'); // \"675d263dab93ec2b8dc1cb53\" });\r\n    // console.log(\"likes: \", likes); //, \" for user: \", req.currentUser?.id);\r\n    res.status(201).send(likes);\r\n  } catch (error) {\r\n  }\r\n};\r\n\r\n// const getLikes = async (req: Request, res: Response, next: NextFunction) => {\r\n//   // console.log(req.currentUser);\r\n\r\n//   try {\r\n//     // const category_id = req.params.id;\r\n\r\n//     const likes = await Like.find({ userId: req.currentUser?.id })\r\n//       .populate([\r\n//         {\r\n//           path: \"itemId\",\r\n//           select: \"title description image\",\r\n//         },\r\n//       ]) \r\n//       .sort({ itemType: 1 })\r\n//       .then((result) =>\r\n//         result.map((subdoc) => ({\r\n//           item: subdoc.itemId,\r\n//           type: subdoc.itemType,\r\n//         }))\r\n//       );\r\n\r\n//     // console.log(\"likes: \", likes, \" for user: \", req.currentUser?.id);\r\n//     res.status(201).send(likes);\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nexport default getLikes;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Like } from \"../models/like.js\";\r\n\r\nconst changeLike = async (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  const filter = {\r\n    itemId: req.params.itemid,\r\n    userId: req.currentUser?.id,\r\n  };\r\n\r\n  // console.log(filter);\r\n\r\n  const { deletedCount } = await Like.deleteMany(filter);\r\n\r\n  // console.log(deletedCount);\r\n\r\n  try {\r\n    if (deletedCount <= 0) {\r\n      // console.log(\" Not found going to insert\");\r\n      await Like.findOneAndUpdate(filter, {}, { new: true, upsert: true });\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error in node js: \", error);\r\n  }\r\n\r\n  res.status(201).send(\"Successfully updated\");\r\n};\r\n\r\nexport default changeLike;\r\n", "import { requireAuth } from \"@manprtickets/common\";\r\nimport express from \"express\";\r\n\r\nimport postNewStockEntry from \"./new\";\r\nimport {\r\n  getStockById,\r\n  getStockByItemId,\r\n  getStockByItemType,\r\n  getStockByType,\r\n} from \".\";\r\nimport updateStockEntry from \"./update\";\r\nimport deleteStockEntry from \"./delete\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:id\", getStockById);\r\n\r\nrouter.post(\"/new\", requireAuth, postNewStockEntry);\r\n\r\nrouter.put(\"/update\", requireAuth, updateStockEntry);\r\n\r\nrouter.delete(\"/delete/:id\", requireAuth, deleteStockEntry);\r\n\r\nrouter.get(\"/item/:itemid\", getStockByItemId);\r\n\r\nrouter.get(\"/type/:itemtype\", getStockByItemType);\r\n\r\nrouter.get(\"/:itemtype\", getStockByType);\r\n\r\nexport { router as stockRouter };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from 'lodash';\r\nimport { Stock } from \"../models/stock\";\r\n\r\nconst postNewStockEntry = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const { itemid, itemtype, quantity, qtytype, unit, price, gst, discount } = req.body;\r\n\r\n  const modelName = _.upperFirst(itemtype);\r\n\r\n  // console.log(\"new stock: \", req.body);\r\n  try {\r\n    const stockitem = Stock.build({\r\n      itemid,\r\n      itemtype: modelName,\r\n      quantity,\r\n      qtytype,\r\n      unit,\r\n      price,\r\n      gst,\r\n      discount,\r\n      userId: req.currentUser!.id,\r\n      // itemModel: modelName,\r\n    });\r\n\r\n    await stockitem.save();\r\n    // console.log(\"product saved\", stockitem);\r\n    res.status(201).send(stockitem);\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n    \r\n  }\r\n};\r\n\r\nexport default postNewStockEntry;\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\"];\r\nconst units = [\"No\", \"Kg\", \"Lts\", \"cm\", \"mm\", \"mtr\"];\r\n\r\nexport interface StockAttrs {\r\n  itemid: string;\r\n  itemtype: string;\r\n  quantity: number;\r\n  qtytype: string;\r\n  unit: string;\r\n  price: number;\r\n  gst: number;\r\n  discount: number;\r\n  userId: string;\r\n}\r\n\r\nexport interface StockDoc extends mongoose.Document {\r\n  id: string;\r\n  itemid: string;\r\n  itemtype: string;\r\n  title: string;\r\n  quantity: number;\r\n  qtytype: string;\r\n  unit: string;\r\n  price: number;\r\n  gst: number;\r\n  discount: number;\r\n  userId: string;\r\n}\r\n\r\ninterface StockModel extends mongoose.Model<StockDoc> {\r\n  build(attrs: StockAttrs): StockDoc;\r\n}\r\n\r\nconst stockSchema = new mongoose.Schema(\r\n  {\r\n    itemid: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"item\",\r\n      required: true,\r\n    },\r\n    itemtype: {\r\n      type: String,\r\n      enum: itemtypes,\r\n      required: true,\r\n    },\r\n    unit: {\r\n      type: String,\r\n      enum: units,\r\n      required: true,\r\n    },\r\n    qtytype: {\r\n      type: String,\r\n      default: \"Stock\",\r\n      required: true,\r\n    },\r\n    quantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    gst: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    discount: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nstockSchema.statics.build = (attrs: StockAttrs) => {\r\n  return new Stock(attrs);\r\n};\r\n\r\nconst Stock = mongoose.model<StockDoc, StockModel>(\r\n  \"Stock\",\r\n  stockSchema\r\n);\r\n\r\nexport { Stock };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { Item } from \"../../item/models/item\";\r\nimport { Stock } from \"../models/stock\";\r\n\r\nexport const getStockByType = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const stocks = await Stock.find({ itemtype: \"Product\" });\r\n};\r\n\r\nexport const getItemStock = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const allItemStock = await Item.aggregate([\r\n    {\r\n      $lookup: {\r\n        from: \"stocks\",\r\n        localField: \"_id\",\r\n        foreignField: \"itemid\",\r\n        as: \"stock\",\r\n      },\r\n    },\r\n    {\r\n      $unwind: {\r\n        path: \"$stock\",\r\n        preserveNullAndEmptyArrays: true,\r\n      },\r\n    },\r\n    {\r\n      $project: {\r\n        type: \"Product\",\r\n        _id: 0,\r\n        unit: 1,\r\n        title: 1,\r\n        image: 1,\r\n        id: { $toString: \"$_id\" },\r\n        \"stock.quantity\": 1,\r\n        \"stock.stockid\": \"$stock._id\",\r\n        \"stock.price\": 1,\r\n        \"stock.gst\": 1,\r\n        \"stock.discount\": 1,\r\n      },\r\n    },\r\n  ]);\r\n\r\n  res.send(allItemStock);\r\n};\r\n\r\nexport const getStockByItemId = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  console.log(\"from stock by item: \", req.params.itemid);\r\n\r\n  let stockItemArr = await Stock.find({\r\n    itemid: new mongoose.Types.ObjectId(req.params.itemid),\r\n  });\r\n\r\n  // console.log(\"selected: \", stockItemArr);\r\n\r\n  res.send(stockItemArr);\r\n};\r\n\r\nexport const getStockByItemType = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"from stock by item: \", req.params.itemid);\r\n\r\n  // let stockItemArr = await Stock.find({\r\n  //   itemtype: req.params.itemtype,\r\n  // });\r\n\r\n  let stockItemArr = await Stock.aggregate([\r\n    {\r\n      $match: { itemtype: req.params.itemtype },\r\n    },\r\n    {\r\n      $addFields: {\r\n        itemid: { $toString: \"$itemid\" },\r\n        id: { $toString: \"$_id\" },\r\n        userId: { $toString: \"$userId\" },\r\n      },\r\n    },\r\n    {\r\n      $project: {\r\n        _id: 0,\r\n        id: 1,\r\n        itemid: 1,\r\n        quantity: 1,\r\n        qtytype: 1,\r\n        price: 1,\r\n        gst: 1,\r\n        discount: 1,\r\n        userId: 1,\r\n      },\r\n    },\r\n  ]);\r\n  // console.log(\"selected: \", stockItemArr);\r\n\r\n  res.send(stockItemArr);\r\n};\r\n\r\nexport const getStockById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"get stock entry: \", req.params.id);\r\n\r\n  const stockItem = await Stock.findOne({\r\n    _id: new mongoose.Types.ObjectId(req.params.id),\r\n  });\r\n\r\n  // console.log(stockItem);\r\n\r\n  res.send(stockItem);\r\n};\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from \"lodash\";\r\nimport { NotFoundError } from \"@manprtickets/common\";\r\nimport { Stock } from \"../models/stock\";\r\n\r\nconst updateStockEntry = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const { itemid, quantity, unit, price, gst, discount } = req.body;\r\n\r\n  // console.log(\"body: \", req.body);\r\n\r\n  const stockItem = await Stock.findById(itemid);\r\n\r\n  if (!stockItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  // console.log(\"stock item: \", stockItem);\r\n\r\n  stockItem.set({\r\n    quantity: quantity,\r\n    unit: unit,\r\n    // qtytype: \"Stock\",\r\n    price: price,\r\n    gst: gst,\r\n    discount: discount,\r\n  });\r\n\r\n  await stockItem.save();\r\n\r\n  res.status(201).send(stockItem);\r\n};\r\n\r\nexport default updateStockEntry;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from \"lodash\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\nimport { Stock } from \"../models/stock\";\r\n\r\nconst deleteStockEntry = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const stockItem = await Stock.findById(req.params.id);\r\n\r\n  if (!stockItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  // console.log(\"stock item: \", stockItem);\r\n\r\n  if (stockItem.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  const { deletedCount } = await Stock.deleteOne({ _id: req.params.id });\r\n\r\n  // console.log(\"deleted stock item: \", deletedCount);\r\n\r\n  res\r\n    .status(201)\r\n    .send(`${deletedCount} StockItem deleted successfully`);\r\n};\r\n\r\nexport default deleteStockEntry;\r\n", "import {\r\n  requireAuth,\r\n} from \"@manprtickets/common\";\r\nimport express from \"express\";\r\n\r\nimport postNewBill from \"./new.js\";\r\nimport { getBillsByItemId, getInvoiceById } from \"./index.js\";\r\nimport updateBill from \"./update.js\";\r\nimport deleteBill from \"./delete.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:id\", getInvoiceById);\r\nrouter.get(\"/item/:itemid\", requireAuth, getBillsByItemId);\r\n\r\nrouter.post(\r\n  \"/new\",\r\n  requireAuth,\r\n  postNewBill\r\n);\r\n\r\nrouter.put(\r\n  \"/update\",\r\n  requireAuth,\r\n  updateBill\r\n);\r\n\r\nrouter.delete(\"/delete/:id\", requireAuth, deleteBill);\r\n\r\nexport { router as billRouter };\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\"];\r\nconst qtyactions = [\"Purchase\", \"Sale\", \"Return\", \"Obsolete\", \"Defective\"];\r\nconst units = [\"No\", \"Kg\", \"Lts\", \"cm\", \"mm\", \"mtr\"];\r\n\r\nexport interface BillItemAttrs {\r\n  itemid: string;\r\n  itemtype: string;\r\n  // itemModel: string;\r\n  quantity: number;\r\n  qtytype: string;\r\n  unit: string;\r\n  price: number;\r\n  gst: number;\r\n  discount: number;\r\n  billtotal: number;\r\n  shipping: number;\r\n  userId: string;\r\n}\r\n\r\nexport interface BillItemDoc extends mongoose.Document {\r\n  id: string;\r\n  itemid: string;\r\n  itemtype: string;\r\n  // itemModel: string;\r\n  title: string;\r\n  quantity: number;\r\n  qtytype: string;\r\n  unit: string;\r\n  price: number;\r\n  gst: number;\r\n  discount: number;\r\n  billtotal: number;\r\n  shipping: number;\r\n  userId: string;\r\n}\r\n\r\ninterface BillItemModel extends mongoose.Model<BillItemDoc> {\r\n  build(attrs: BillItemAttrs): BillItemDoc;\r\n}\r\n\r\nconst billItemSchema = new mongoose.Schema(\r\n  {\r\n    itemid: {\r\n      type: Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"items\",\r\n    },\r\n    itemtype: {\r\n      type: String,\r\n      enum: itemtypes,\r\n      required: true,\r\n    },\r\n    unit: {\r\n      type: String,\r\n      enum: units,\r\n      required: true,\r\n    },\r\n    qtytype: {\r\n      type: String,\r\n      enum: qtyactions,\r\n      default: \"Invoice\",\r\n      required: true,\r\n    },\r\n    quantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      default: 0.00,\r\n      required: true,\r\n    },\r\n    gst: {\r\n      type: Number,\r\n      default: 0.00,\r\n      required: true,\r\n    },\r\n    discount: {\r\n      type: Number,\r\n      default: 0.00,\r\n      required: true,\r\n    },\r\n    billtotal: {\r\n      type: Number,\r\n      default: 0.00,\r\n      required: true,\r\n    },\r\n    shipping: {\r\n      type: Number,\r\n      default: 0.00,\r\n      required: true,\r\n    },\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    // itemModel: {\r\n    //   type: String,\r\n    //   required: true,\r\n    //   enum: itemtypes,\r\n    // },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nbillItemSchema.statics.build = (attrs: BillItemAttrs) => {\r\n  return new BillItem(attrs);\r\n};\r\n\r\nconst BillItem = mongoose.model<BillItemDoc, BillItemModel>(\r\n  \"BillItem\",\r\n  billItemSchema\r\n);\r\n\r\nexport { BillItem };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from \"lodash\";\r\nimport { BillItem } from \"../models/bill-item.js\";\r\nimport { Stock } from \"../../stock/models/stock.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst postNewBill = async (req: Request, res: Response, next: NextFunction) => {\r\n  const {\r\n    itemid,\r\n    itemtype,\r\n    quantity,\r\n    unit,\r\n    qtytype,\r\n    price,\r\n    gst,\r\n    discount,\r\n    billtotal,\r\n    shipping,\r\n  } = req.body;\r\n\r\n  // const modelName = _.upperFirst(itemtype);\r\n\r\n  // console.log(\"new product: \", req.body);\r\n\r\n  const session = await mongoose.startSession();\r\n  session.startTransaction();\r\n  try {\r\n    const billitem = BillItem.build({\r\n      itemid,\r\n      itemtype,\r\n      quantity,\r\n      qtytype,\r\n      unit,\r\n      price,\r\n      gst,\r\n      discount,\r\n      billtotal,\r\n      shipping,\r\n      userId: req.currentUser!.id,\r\n    });\r\n\r\n\r\n\r\n    const stockitem = Stock.build({\r\n      itemid,\r\n      itemtype,\r\n      quantity,\r\n      qtytype: \"Stock\",\r\n      unit,\r\n      price,\r\n      gst,\r\n      discount,\r\n      userId: req.currentUser!.id,\r\n    });\r\n    // console.log(\"product saved\", stockitem);\r\n    await billitem.save();\r\n    await stockitem.save();\r\n\r\n    await session.commitTransaction();\r\n\r\n    res.status(201).send(billitem);\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n    await session.abortTransaction();\r\n    // return null;\r\n  }\r\n};\r\n\r\nexport default postNewBill;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { BillItem } from \"../models/bill-item.js\";\r\n\r\nexport const getBillsByItemId = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"get invoices entries: \", req.params.itemid);\r\n  let billItemArr = await BillItem.find({\r\n    itemid: req.params.itemid,\r\n  });\r\n  \r\n  res.send(billItemArr);\r\n};\r\n\r\nexport const getInvoiceById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"get invoice entry: \", req.params.id);\r\n\r\n  const billItem = await BillItem.findOne({\r\n    _id: new mongoose.Types.ObjectId(req.params.id),\r\n  });\r\n\r\n  // console.log(billItem);\r\n\r\n  res.send(billItem);\r\n};\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from \"lodash\";\r\nimport { NotFoundError } from \"@manprtickets/common\";\r\nimport { BillItem } from \"../models/bill-item.js\";\r\n\r\nconst updateBill = async (req: Request, res: Response, next: NextFunction) => {\r\n  const {\r\n    itemid,\r\n    quantity,\r\n    unit,\r\n    qtytype,\r\n    price,\r\n    gst,\r\n    discount,\r\n    billtotal,\r\n    shipping,\r\n  } = req.body;\r\n\r\n  // console.log(\"body: \", req.body);\r\n\r\n  const billItem = await BillItem.findById(itemid);\r\n\r\n  if (!billItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  // console.log(\"invoice item: \", billItem);\r\n\r\n  billItem.set({\r\n    quantity: quantity,\r\n    unit: unit,\r\n    qtytype: qtytype,\r\n    price: price,\r\n    gst: gst,\r\n    discount: discount,\r\n    billtotal: billtotal,\r\n    shipping: shipping,\r\n  });\r\n\r\n  await billItem.save();\r\n\r\n  res.status(201).send(billItem);\r\n};\r\n\r\nexport default updateBill;\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport * as _ from \"lodash\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\nimport { BillItem } from \"../models/bill-item.js\";\r\n\r\nconst deleteBill = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const billItem = await BillItem.findById(req.params.id);\r\n\r\n  if (!billItem) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  // console.log(\"bill item: \", billItem);\r\n\r\n  if (billItem.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  const deleteCount = await billItem.deleteOne({ _id: req.params.id });\r\n\r\n  // console.log(\"deleted stock item: \", deleteCount);\r\n\r\n  res.send(`${deleteCount.deletedCount} billItem deleted successfully`);\r\n};\r\n\r\nexport default deleteBill;\r\n", "import { requireAuth } from \"@manprtickets/common\";\r\nimport express from \"express\";\r\nimport { getCartUser, replaceCartUser } from \"./index.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", requireAuth, getCartUser);\r\n\r\nrouter.post(\"/\", requireAuth, replaceCartUser);\r\n\r\nexport { router as cartRouter };\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\"];\r\n\r\nexport interface CartItemAttrs {\r\n  itemid: string;\r\n  // itemtype: string;\r\n  // itemModel: string;\r\n  // name: string;\r\n  quantity: number;\r\n  totalPrice: number;\r\n  price: number;\r\n}\r\n\r\ninterface CartItemDoc extends mongoose.Document {\r\n  id: string\r\n  itemid: string;\r\n  // itemtype: string;\r\n  // name: string;\r\n  quantity: number;\r\n  limitQty: number;\r\n  totalPrice: number;\r\n  price: number;\r\n}\r\n\r\ninterface CartItemModel extends mongoose.Model<CartItemDoc> {\r\n  build(attrs: CartItemAttrs): CartItemDoc;\r\n}\r\n\r\nconst cartItemSchema = new mongoose.Schema(\r\n  {\r\n    itemid: {\r\n      type: Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"Item\",\r\n    },\r\n    // itemtype: {\r\n    //   type: String,\r\n    //   enum: itemtypes,\r\n    //   required: true,\r\n    // },\r\n    // name: {\r\n    //   type: String,\r\n    //   required: true,\r\n    // },\r\n    quantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    limitQty: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    totalPrice: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\n// cartItemSchema.statics.build = (attrs: CartItemAttrs) => {\r\n//   return new CartItem(attrs);\r\n// };\r\n\r\n// const CartItem = mongoose.model<CartItemDoc, CartItemModel>(\r\n//   \"CartItem\",\r\n//   cartItemSchema\r\n// );\r\n\r\ninterface CartAttrs {\r\n  userId: string;\r\n  cartitems: [typeof cartItemSchema] | [];\r\n  totalQuantity: number;\r\n}\r\n\r\ninterface CartDoc extends mongoose.Document {\r\n  userId: string;\r\n  cartitems: [typeof cartItemSchema] | [];\r\n  totalQuantity: number;\r\n}\r\n\r\ninterface CartModel extends mongoose.Model<CartDoc> {\r\n  build(attrs: CartAttrs): CartDoc;\r\n}\r\n\r\nconst cartSchema = new mongoose.Schema(\r\n  {\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    cartitems: {\r\n      type: [cartItemSchema],\r\n      // default: [],\r\n      required: true\r\n    },\r\n    totalQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\ncartSchema.statics.build = (attrs: CartAttrs) => {\r\n  return new Cart(attrs);\r\n};\r\n\r\nconst Cart = mongoose.model<CartDoc, CartModel>(\"Cart\", cartSchema);\r\n\r\nexport { Cart };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { Cart } from \"../models/cart.js\";\r\nimport { body } from \"express-validator\";\r\n\r\nexport const getCartUser = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"get cart for user\");\r\n\r\n  const cart = await Cart.findOne({ userId: req.currentUser?.id });\r\n\r\n  // console.log(\"existing cart: \", cart);\r\n\r\n  if (!cart) {\r\n    try {\r\n      const newCart = Cart.build({\r\n        userId: req.currentUser?.id as string,\r\n        cartitems: [],\r\n        totalQuantity: 0,\r\n      });\r\n      await newCart.save();\r\n      // console.log(\"new cart: \", newCart);\r\n      return res.send(newCart);\r\n    } catch (error) {\r\n      console.log(\"created errors: \", error);\r\n    }\r\n  }\r\n\r\n  res.send(cart);\r\n};\r\n\r\nexport const replaceCartUser = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const { cartitems, totalQuantity } = req.body;\r\n  const userId = req.currentUser?.id;\r\n\r\n  // console.log(\"replace cart for user: \", userId);\r\n  // console.log(\"cart items: \", req.body);\r\n\r\n  const filter = {\r\n    userId,\r\n  };\r\n\r\n  // console.log(\"filter: \", filter);\r\n\r\n  const { deletedCount } = await Cart.deleteMany(filter);\r\n  // console.log(\"deleted count: \", deletedCount);\r\n\r\n  try {\r\n    // if (deletedCount <= 0) {\r\n      // console.log(\" Not found going to insert\");\r\n      await Cart.findOneAndUpdate(\r\n        filter,\r\n        { cartitems, totalQuantity },\r\n        { new: true, upsert: true }\r\n      );\r\n    // }\r\n  } catch (error) {\r\n    console.log(\"error in node js: \", error);\r\n  }\r\n\r\n  res.status(201).send(\"Successfully replaced cart\");\r\n};\r\n", "import { requireAuth } from \"@manprtickets/common\";\r\nimport express from \"express\";\r\nimport cancelOrder from \"./delete.js\";\r\nimport { getAddressById, getAddresses, getOrderById, getOrdersByUser, getUserOrders } from \"./index.js\";\r\nimport { createAddress, createOrder } from \"./new.js\";\r\nimport { completeOrder, updateOrder } from \"./update.js\";\r\nimport { downloadPDF, generateOrderPdf } from \"./pdf-generate.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", requireAuth, getUserOrders);\r\nrouter.get(\"/address\", requireAuth, getAddresses);\r\nrouter.get(\"/address/:id\", requireAuth, getAddressById); // \r\nrouter.get(\"/:orderid\", requireAuth, getOrderById); // \r\nrouter.get(\"/genpdf/:orderid\", requireAuth, generateOrderPdf); // \r\nrouter.get(\"/downpdf/:orderid\", requireAuth, downloadPDF); // \r\nrouter.post(\"/\", requireAuth, createOrder);\r\nrouter.post(\"/address\", requireAuth, createAddress);\r\nrouter.patch(\"/complete/:orderid\", requireAuth, completeOrder);\r\nrouter.patch(\"/:orderid\", requireAuth, updateOrder);\r\nrouter.delete(\"/:orderid\", requireAuth, cancelOrder);\r\n// router.put(\"/\", requireAuth, updateOrder);\r\n\r\nexport { router as orderRouter };\r\n", "import mongoose from \"mongoose\";\r\nimport { OrderStatus } from \"../../types/order-status.js\";\r\n// import { ItemTypes } from \"../../types/item-types\";\r\nconst Schema = mongoose.Schema;\r\n\r\n// const itemtypes = [\"Product\", \"Equipment\", \"Spare\", \"Package\"];\r\n\r\ninterface OrderItemAttrs {\r\n  itemid: string;\r\n  orderId: string;\r\n  // itemtype: string;\r\n  // itemModel: string;\r\n  quantity: number;\r\n  price: number;\r\n  totalPrice: number;\r\n}\r\n\r\nexport interface OrderItemDoc extends mongoose.Document {\r\n  itemid: string;\r\n  orderId: string;\r\n  // itemtype: string;\r\n  // itemModel: string;\r\n  quantity: number;\r\n  price: number;\r\n  totalPrice: number;\r\n  // title: string;\r\n  // image: string;\r\n  // description: string;\r\n}\r\n\r\ninterface OrderItemModel extends mongoose.Model<OrderItemDoc> {\r\n  build(attrs: OrderItemAttrs): OrderItemDoc;\r\n}\r\n\r\nexport const orderItemSchema = new mongoose.Schema(\r\n  {\r\n    // itemid: {\r\n    //   type: Schema.Types.ObjectId,\r\n    //   required: true,\r\n    //   refPath: \"items.itemModel\",\r\n    // },\r\n    itemid: {\r\n      type: Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"Item\",\r\n    },\r\n    orderId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Order\",\r\n      required: true,\r\n    },\r\n    // itemtype: {\r\n    //   type: String,\r\n    //   enum: Object.values(ItemTypes),\r\n    //   default: ItemTypes.Product,\r\n    //   required: true,\r\n    // },\r\n    quantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    totalPrice: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    // title: {\r\n    //   type: String,\r\n    // },\r\n    // description: {\r\n    //   type: String,\r\n    // },\r\n    // image: {\r\n    //   type: String,\r\n    // },\r\n    // itemModel: {\r\n    //   type: String,\r\n    //   required: true,\r\n    //   //   enum: itemtypes,\r\n    //   enum: Object.values(ItemTypes),\r\n    //   default: ItemTypes.Product,\r\n    // },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\n// cartItemSchema.statics.build = (attrs: CartItemAttrs) => {\r\n//   return new CartItem(attrs);\r\n// };\r\n\r\n// const CartItem = mongoose.model<CartItemDoc, CartItemModel>(\r\n//   \"CartItem\",\r\n//   cartItemSchema\r\n// );\r\n\r\ninterface OrderAttrs {\r\n  userId: string;\r\n  status: OrderStatus;\r\n  items: [typeof orderItemSchema] | [];\r\n  orderDate: Date;\r\n  expiresAt: Date;\r\n  totalQuantity: number;\r\n  orderValue: Number;\r\n  //   paymentMode: string;\r\n  shipId?: string;\r\n  //   paymentId: string;\r\n}\r\n\r\nexport interface OrderDoc extends mongoose.Document {\r\n  id: string;\r\n  userId: string;\r\n  status: OrderStatus;\r\n  items: [typeof orderItemSchema] | [];\r\n  orderDate: Date;\r\n  expiresAt: Date;\r\n  totalQuantity: number;\r\n  orderValue: Number;\r\n  //   paymentMode: string;\r\n  shipId?: string;\r\n  //   paymentId: string;\r\n}\r\n\r\ninterface OrderModel extends mongoose.Model<OrderDoc> {\r\n  build(attrs: OrderAttrs): OrderDoc;\r\n}\r\n\r\nconst orderSchema = new mongoose.Schema(\r\n  {\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    status: {\r\n      type: String,\r\n      required: true,\r\n      enum: Object.values(OrderStatus),\r\n      default: OrderStatus.Created,\r\n    },\r\n    items: {\r\n      type: [orderItemSchema],\r\n    },\r\n    orderDate: {\r\n      type: mongoose.Schema.Types.Date,\r\n      required: true,\r\n    },\r\n    expiresAt: {\r\n      type: mongoose.Schema.Types.Date,\r\n    },\r\n    totalQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n      required: true,\r\n    },\r\n    orderValue: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n    // paymentMode: {\r\n    //   type: String,\r\n    //   required: true,\r\n    // },\r\n    shipId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Address\",\r\n      // required: true,\r\n    },\r\n    // paymentId: {\r\n    //   type: Schema.Types.ObjectId,\r\n    //   ref: \"Payment\",\r\n    //   required: true,\r\n    // },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\norderSchema.statics.build = (attrs: OrderAttrs) => {\r\n  return new Order(attrs);\r\n};\r\n\r\nconst Order = mongoose.model<OrderDoc, OrderModel>(\"Order\", orderSchema);\r\n\r\nexport { Order };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Order } from \"../models/order.js\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\n\r\nconst cancelOrder = async (req: Request, res: Response, next: NextFunction) => {\r\n  const order = await Order.findById(req.params.orderid);\r\n  if (!order) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (order.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n  const deleteCount = await Order.deleteOne({ _id: req.params.orderid });\r\n  res.send({\r\n    message: `${deleteCount.deletedCount} order deleted successfully`,\r\n  });\r\n};\r\n\r\nexport default cancelOrder;\r\n", "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nexport interface AddressAttrs {\r\n  userId: string;\r\n  email: string;\r\n  receiver: string;\r\n  house: string;\r\n  street: string;\r\n  city: string;\r\n  pincode: string;\r\n  phone: string;\r\n}\r\n\r\nexport interface AddressDoc extends mongoose.Document {\r\n  id: string\r\n  userId: string;\r\n  email: string;\r\n  receiver: string;\r\n  house: string;\r\n  street: string;\r\n  city: string;\r\n  pincode: string;\r\n  phone: string;\r\n}\r\n\r\ninterface AddressModel extends mongoose.Model<AddressDoc> {\r\n  build(attrs: AddressAttrs): AddressDoc;\r\n}\r\n\r\nconst addressSchema = new mongoose.Schema(\r\n  {\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    receiver: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    house: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    street: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    pincode: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    city: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    phone: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\naddressSchema.statics.build = (attrs: AddressAttrs) => {\r\n  return new Address(attrs);\r\n};\r\n\r\nconst Address = mongoose.model<AddressDoc, AddressModel>(\r\n  \"Address\",\r\n  addressSchema\r\n);\r\n\r\nexport { Address };\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Order, OrderDoc } from \"../models/order.js\";\r\nimport { Address } from \"../models/address.js\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport const getUserOrders = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const orders = await Order.find({\r\n      userId: req.currentUser?.id,\r\n      status: \"Complete\",\r\n    });\r\n    // console.log(\"orders: \", orders);\r\n\r\n    res.status(201).send(orders);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getOrdersByUser = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    // console.log(\"orders is called\");\r\n    const orders = await Order.find({\r\n      userId: req.currentUser?.id,\r\n      status: \"Complete\",\r\n    })\r\n      .populate({\r\n        path: \"items.itemid\",\r\n        select: \"title description image\",\r\n        transform: (doc, id) =>\r\n          doc == null\r\n            ? null\r\n            : {\r\n                prodid: id,\r\n                title: doc.title,\r\n                image: doc.image,\r\n                description: doc.description,\r\n              },\r\n      })\r\n      .exec();\r\n\r\n    const orderList = orders.map((order) => ({\r\n      id: order.id,\r\n      orderDate: order.orderDate,\r\n      userId: order.userId,\r\n      status: order.status,\r\n      expiresAt: order.expiresAt,\r\n      totalQuantity: order.totalQuantity,\r\n      orderValue: order.orderValue,\r\n      shipping: order.shipId,\r\n      items: transformOrderItems(order),\r\n    }));\r\n\r\n    // console.log(\"orders: \", orderList);\r\n    res.status(201).send(orderList);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nfunction transformOrderItems(order: OrderDoc) {\r\n  const newItems = order.items.map((item) => ({\r\n    itemid: _.get(item, \"itemid.prodid]\"),\r\n    orderId: _.get(item, \"orderId\"),\r\n    itemtype: _.get(item, \"itemtype\"),\r\n    itemModel: _.get(item, \"itemModel\"),\r\n    title: _.get(item, \"itemid.title\"),\r\n    description: _.get(item, \"itemid.description\"),\r\n    image: _.get(item, \"itemid.image\"),\r\n    quantity: _.get(item, \"quantity\"),\r\n    price: _.get(item, \"price\"),\r\n    totalPrice: _.get(item, \"totalPrice\"),\r\n  }));\r\n  return newItems;\r\n}\r\n\r\nexport const getOrderById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const order = await Order.findById({\r\n      _id: req.params.orderid,\r\n    });\r\n    // console.log(\"order: \", order);\r\n\r\n    res.status(201).send(order);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAddresses = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"address is called: \", req.currentUser?.id);\r\n\r\n  const addresses = await Address.find({ userId: req.currentUser?.id });\r\n  // console.log(\"addresses: \", addresses);\r\n\r\n  res.status(201).send(addresses);\r\n};\r\n\r\nexport const getAddressById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"address is called: \", req.params.id);\r\n\r\n  const address = await Address.findById(req.params.id);\r\n  // console.log(\"address: \", address);\r\n\r\n  res.send(address);\r\n};\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Order } from \"../models/order.js\";\r\nimport { OrderStatus } from \"../../types/order-status.js\";\r\nimport { CartItemAttrs } from \"../../cart/models/cart.js\";\r\nimport { Address } from \"../models/address.js\";\r\n\r\nexport const createOrder = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const EXPIRATION_WINDOW_SECONDS = 15 * 60;\r\n\r\n  const {\r\n    cart: { cartitems, totalQuantity },\r\n    value,\r\n  } = req.body;\r\n\r\n  const expiration = new Date();\r\n  expiration.setSeconds(expiration.getSeconds() + EXPIRATION_WINDOW_SECONDS);\r\n\r\n  const neworder = new Order({\r\n    userId: req.currentUser!.id,\r\n    status: OrderStatus.Created,\r\n    orderDate: new Date(),\r\n    orderValue: value,\r\n    // cacheCart: req.body.items,\r\n    expiresAt: expiration,\r\n    items: [],\r\n    totalQuantity: totalQuantity,\r\n    shipId: undefined,\r\n  });\r\n\r\n  // console.log(\"new order: \", neworder);\r\n\r\n  const orderitems = cartitems.map((itemobj: CartItemAttrs) => ({\r\n    itemid: itemobj.itemid,\r\n    orderId: neworder._id,\r\n    // itemtype: itemobj.itemtype,\r\n    // itemModel: itemobj.itemtype,\r\n    quantity: itemobj.quantity,\r\n    price: itemobj.price,\r\n    totalPrice: itemobj.totalPrice,\r\n  }));\r\n\r\n  neworder.items = orderitems;\r\n\r\n  // console.log(\"new order: \", neworder);\r\n\r\n  await neworder.save();\r\n\r\n  res.send(neworder);\r\n};\r\n\r\nexport const createAddress = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(req.body);\r\n  const { email, receiver, phone, house, street, pincode, city } = req.body;\r\n\r\n  const newaddress = new Address({\r\n    userId: req.currentUser!.id,\r\n    email,\r\n    receiver,\r\n    house,\r\n    street,\r\n    city,\r\n    pincode,\r\n    phone,\r\n  });\r\n\r\n  try {\r\n    await newaddress.save();\r\n  } catch (error) {\r\n    console.log(\"error: \", error);\r\n  }\r\n\r\n  // console.log(\"new: \", newaddress);\r\n  res.send({ shipId: newaddress.id });\r\n};\r\n", "import { Request, Response, NextFunction } from \"express\";\r\nimport { Order } from \"../models/order.js\";\r\nimport { NotAuthorizedError, NotFoundError } from \"@manprtickets/common\";\r\nimport { Address } from \"../models/address.js\";\r\nimport { Payment } from \"../models/payment.js\";\r\n\r\nexport const updateOrder = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  // console.log(\"order status: \", req.body);\r\n  const order = await Order.findById(req.params.orderid);\r\n  if (!order) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (order.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  order.set({\r\n    status: req.body.status,\r\n    // shippingId: req.body.shipping?\r\n  });\r\n\r\n  await order.save();\r\n\r\n  res.send({ message: \"Order udpated successfully\" });\r\n};\r\n\r\nexport const completeOrder = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const { shipping } = req.body;\r\n  // console.log(\"order complete: \", shipping);\r\n  const order = await Order.findById(req.params.orderid);\r\n  if (!order) {\r\n    throw new NotFoundError();\r\n  }\r\n\r\n  if (order.userId.valueOf() !== req.currentUser!.id) {\r\n    throw new NotAuthorizedError();\r\n  }\r\n\r\n  const { id, email, receiver, phone, house, street, pincode, city } =\r\n    shipping;\r\n\r\n  let address = null;\r\n\r\n  let existingAddress = false;\r\n\r\n  if (id && id !== \"\") {\r\n    address = await Address.findById(id);\r\n    if (!address) {\r\n      throw new NotFoundError();\r\n    }\r\n    existingAddress = true;\r\n  } else {\r\n    address = new Address({\r\n      userId: req.currentUser!.id,\r\n      email,\r\n      receiver,\r\n      house,\r\n      street,\r\n      city,\r\n      pincode,\r\n      phone,\r\n    });\r\n  }\r\n\r\n  // const newaddress = new Address({\r\n  //   userId: req.currentUser!.id,\r\n  //   receiver,\r\n  //   house,\r\n  //   street,\r\n  //   city,\r\n  //   pincode,\r\n  //   phone,\r\n  //   email,\r\n  // });\r\n\r\n  console.log(\"shipping id: \", address?.id);\r\n\r\n  const payObject = new Payment({\r\n    orderId: order.id,\r\n    stripeId: \"adfbbc2332\",\r\n    amount: order.orderValue,\r\n  });\r\n\r\n  order.set({\r\n    shipId: address?.id,\r\n    status: \"Complete\",\r\n  });\r\n\r\n  if (!existingAddress) {\r\n    await address.save();\r\n  }\r\n\r\n  await order.save();\r\n  await payObject.save();\r\n\r\n  res.send({ message: \"Order completed successfully\" });\r\n};\r\n", "import mongoose from \"mongoose\";\r\n\r\ninterface PaymentAttrs {\r\n  orderId: string;\r\n  stripeId: string;\r\n  amount: number;\r\n}\r\n\r\ninterface PaymentDoc extends mongoose.Document {\r\n  orderId: string;\r\n  stripeId: string;\r\n  amount: number;\r\n}\r\n\r\ninterface PaymentModel extends mongoose.Model<PaymentDoc> {\r\n  build(attrs: PaymentAttrs): PaymentDoc;\r\n}\r\n\r\nconst paymentSchema = new mongoose.Schema(\r\n  {\r\n    orderId: {\r\n      required: true,\r\n      type: String,\r\n    },\r\n    stripeId: {\r\n      required: true,\r\n      type: String,\r\n    },\r\n    amount: {\r\n      type: Number,\r\n      default: 0.0,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    toJSON: {\r\n      transform(doc, ret: any) {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\npaymentSchema.statics.build = (attrs: PaymentAttrs) => {\r\n  return new Payment(attrs);\r\n};\r\n\r\nconst Payment = mongoose.model<PaymentDoc, PaymentModel>(\r\n  \"Payment\",\r\n  paymentSchema\r\n);\r\n\r\nexport { Payment };\r\n", "import { Document, Page, Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\nimport Footer from \"../snippets/Footer.js\";\r\nimport BillTitle from \"../snippets/bill_title.js\";\r\nimport BoxNoDate from \"../snippets/box_nodate.js\";\r\nimport { formattedIDNumber, formattedDate } from \"../../lib/util_fns.js\";\r\nimport BoxAddress from \"../snippets/box_address.js\";\r\nimport { OrderType } from \"../../types/zod-schemas.js\";\r\nimport BOMTableHead from \"../snippets/bom-table-head.js\";\r\nimport BOMTableBody from \"../snippets/bom-table-body.js\";\r\nimport BOMFooter from \"../snippets/bom-footer.js\";\r\nimport Signature from \"../snippets/signature.js\";\r\n\r\nconst OrderDetail = ({ order }: { order: OrderType }) => {\r\n  // console.log(\"type of date before : \", typeof order.orderDate);\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <BillTitle name=\"Original Tax Invoice/ Bill of Supply/ Cash Memo\" />\r\n        <View style={styles.orderNumRow}>\r\n          <BoxNoDate\r\n            name=\"Order\"\r\n            num_fld={formattedIDNumber(order.id, 10)}\r\n            date_fld={formattedDate(order.orderDate)}\r\n            style={{ alignItems: \"flex-start\" }}\r\n          />\r\n          <BoxNoDate\r\n            name=\"Invoice\"\r\n            num_fld={formattedIDNumber(order.id, 10)}\r\n            date_fld={formattedDate(order.orderDate)}\r\n            style={{ alignItems: \"flex-end\" }}\r\n          />\r\n        </View>\r\n        <View style={styles.addressRow}>\r\n          <BoxAddress name=\"Sold By\" address={order.shipping} />\r\n          <BoxAddress name=\"Shipping\" address={order.shipping} />\r\n          <BoxAddress name=\"Billing\" address={order.shipping} />\r\n        </View>\r\n        <View style={styles.tableRow}>\r\n          <BOMTableHead />\r\n          <BOMTableBody items={order.items} />\r\n          <BOMFooter total={order.orderValue} />\r\n        </View>\r\n        <Signature />\r\n        <Footer />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default OrderDetail;\r\n", "import { Font, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\nFont.register({\r\n  family: \"Oswald\",\r\n  src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    fontSize: 11,\r\n    paddingTop: 35,\r\n    paddingBottom: 35,\r\n    paddingHorizontal: 35,\r\n    lineHeight: 1.5,\r\n    flexDirection: 'column',\r\n  },\r\n  titleRow: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: 40,\r\n    borderBottomWidth: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tableRow: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: 350,\r\n    borderWidth: 1,\r\n    flexDirection: 'column',\r\n  },\r\n  theadRow: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '55',\r\n    flexDirection: 'row',\r\n  },\r\n  tbodyRow: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '35',\r\n    flexDirection: 'row',\r\n  },\r\n  tfootRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '50',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  signRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '90',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  tcells: {\r\n    borderWidth: 1,\r\n    width: '40',\r\n    fontFamily: 'Times-Roman',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tcellxl: {\r\n    borderWidth: 1,\r\n    width: '130',\r\n    fontFamily: 'Times-Roman',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tcelll: {\r\n    borderWidth: 1,\r\n    width: '80',\r\n    fontFamily: 'Times-Roman',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tcellm: {\r\n    borderWidth: 1,\r\n    width: '70',\r\n    fontFamily: 'Times-Roman',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  bigSize: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Oswald',\r\n    marginBottom: 20,\r\n  },\r\n  orderNumRow: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    height: 30,\r\n    marginTop: 10\r\n  },\r\n  addressRow: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    height: 110,\r\n  },\r\n  text: {\r\n    margin: 8,\r\n    fontSize: 12,\r\n    textAlign: 'left',\r\n    fontFamily: 'Times-Roman',\r\n  },\r\n  addresstext: {\r\n    margin: 2,\r\n    fontSize: 11,\r\n    textAlign: 'left',\r\n    fontFamily: 'Times-Roman',\r\n    lineHeight: \"1\"\r\n  },\r\n  theadText: {\r\n    margin: 8,\r\n    fontSize: 11,\r\n    fontWeight: 'bold',\r\n    textAlign: 'left',\r\n    fontFamily: 'Times-Roman',\r\n  },\r\n  subHead: {\r\n    fontSize: 13,\r\n    fontFamily: 'Oswald',\r\n    marginVertical: 5,\r\n    textAlign: 'left',\r\n  },\r\n  footText: { fontSize: 9 },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  footnote: {\r\n    flexDirection: 'row',\r\n    position: 'absolute',\r\n    justifyContent: 'space-between',\r\n    bottom: 0,\r\n    left: 10,\r\n    right: 10,\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <View style={styles.footnote} fixed>\r\n      <Text style={styles.footText} >Through ManPrema App</Text>\r\n      <Text style={styles.footText}>@toji_chettan_company</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\nconst ReportTitle = ({ name }: { name: string }) => {\r\n  return (\r\n    <View style={styles.titleRow}>\r\n      <Text style={styles.bigSize}>{name}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ReportTitle;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\n\r\ntype MyProps = {\r\n  name: string;\r\n  num_fld: string;\r\n  date_fld: string;\r\n  style: {};\r\n};\r\n\r\nconst BoxNoDate: React.FC<MyProps> = ({ name, num_fld, date_fld, style }) => {\r\n  return (\r\n    <View style={[{ flexDirection: \"column\", width: \"50%\" }, style]}>\r\n      <Text>{`${name} No: ${num_fld}`}</Text>\r\n      <Text>{`${name} Date: ${date_fld}`}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BoxNoDate;\r\n", "export const flattenObject = (obj: any): any => {\r\n  const flattened: any = {};\r\n\r\n  Object.keys(obj).forEach((key) => {\r\n    const value = obj[key];\r\n    if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\r\n      Object.assign(flattened, flattenObject(value));\r\n    } else {\r\n      flattened[key] = value;\r\n    }\r\n  });\r\n\r\n  return flattened;\r\n};\r\n\r\nexport const formattedPrice = (inputPrice: number) =>\r\n  `$ ${inputPrice.toFixed(2)}`;\r\n\r\nexport const formattedDate = (inputDate: Date) =>\r\n  `${inputDate.getDate()}-${inputDate.getMonth()}-${inputDate.getFullYear()}`;\r\n\r\nexport const formattedIDNumber = (idStr: string, maxLength: number) => {\r\n  if (idStr.length > maxLength) {\r\n    return idStr.slice(0, maxLength);\r\n  } else {\r\n    return idStr;\r\n  }\r\n};\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\nimport { AddressOut } from \"../../types/zod-schemas.js\";\r\n\r\nconst BoxAddress = ({ name, address }: { name: string; address: AddressOut }) => {\r\n  return (\r\n    <View style={{ flexDirection: \"column\", width: \"33%\", height: \"160px\" }}>\r\n      <Text style={styles.subHead}>{name}</Text>\r\n      <View>\r\n        <Text style={styles.addresstext}>{address.receiver}</Text>\r\n        <Text style={styles.addresstext}>{address.house}</Text>\r\n        <Text style={styles.addresstext}>{address.street}</Text>\r\n        <Text style={styles.addresstext}>{address.city}</Text>\r\n        <Text style={styles.addresstext}>{address.pincode}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BoxAddress;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\nconst BOMTableHead = () => {\r\n  return (\r\n    <View style={styles.theadRow}>\r\n      <View style={styles.tcells}>\r\n        <Text style={styles.theadText}>Sl. No.</Text>\r\n      </View>\r\n      <View style={styles.tcellxl}>\r\n        <Text style={styles.theadText}>Description</Text>\r\n      </View>\r\n      <View style={styles.tcells}>\r\n        <Text style={styles.theadText}>Unit Price</Text>\r\n      </View>\r\n      <View style={styles.tcells}>\r\n        <Text style={styles.theadText}>Qty</Text>\r\n      </View>\r\n      <View style={styles.tcellm}>\r\n        <Text style={styles.theadText}>Net Amt</Text>\r\n      </View>\r\n      <View style={styles.tcells}>\r\n        <Text style={styles.theadText}>Tax Rate</Text>\r\n      </View>\r\n      <View style={styles.tcells}>\r\n        <Text style={styles.theadText}>Tax Type</Text>\r\n      </View>\r\n      <View style={styles.tcellm}>\r\n        <Text style={styles.theadText}>Tax Amt</Text>\r\n      </View>\r\n      <View style={styles.tcellm}>\r\n        <Text style={styles.theadText}>Total Amt</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BOMTableHead;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\nimport { OrderItemType } from \"../../types/zod-schemas.js\";\r\n\r\nconst BOMTableBody = ({ items }: { items: OrderItemType[] }) => {\r\n  return (\r\n    <View style={{ flexDirection: \"column\" }}>\r\n      {items.map((orderitem, index) => (\r\n        <View style={styles.tbodyRow} key={orderitem.orderitem.id}>\r\n          <View style={styles.tcells}>\r\n            <Text style={styles.text}>{index+1}</Text>\r\n          </View>\r\n          <View style={styles.tcellxl}>\r\n            <Text style={styles.text}>{orderitem.orderitem.title}</Text>\r\n          </View>\r\n          <View style={styles.tcells}>\r\n            <Text style={styles.text}>{orderitem.price}</Text>\r\n          </View>\r\n          <View style={styles.tcells}>\r\n            <Text style={styles.text}>{orderitem.quantity}</Text>\r\n          </View>\r\n          <View style={styles.tcellm}>\r\n            <Text style={styles.text}>{orderitem.totalPrice}</Text>\r\n          </View>\r\n          <View style={styles.tcells}>\r\n            <Text style={styles.text}>5%</Text>\r\n          </View>\r\n          <View style={styles.tcells}>\r\n            <Text style={styles.text}>CGST</Text>\r\n          </View>\r\n          <View style={styles.tcellm}>\r\n            <Text style={styles.text}>20.00</Text>\r\n          </View>\r\n          <View style={styles.tcellm}>\r\n            <Text style={styles.text}>{orderitem.totalPrice}</Text>\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BOMTableBody;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\nconst BOMFooter = ({ total }: { total: number }) => {\r\n  return (\r\n    <View style={styles.tfootRow}>\r\n      <View style={{ flexDirection: \"column\" }}>\r\n        <View style={styles.tcellm}>\r\n          <Text style={styles.theadText}>Tax Total</Text>\r\n        </View>\r\n        <View style={styles.tcellm}>\r\n          <Text style={styles.text}>{total}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{ flexDirection: \"column\" }}>\r\n        <View style={styles.tcelll}>\r\n          <Text style={styles.theadText}>Grand Total</Text>\r\n        </View>\r\n        <View style={styles.tcelll}>\r\n          <Text style={styles.text}>{total}</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BOMFooter;\r\n", "import { Text, View } from \"@react-pdf/renderer\";\r\nimport styles from \"../report_styles.js\";\r\n\r\nconst Signature = () => {\r\n  return (\r\n    <View style={styles.signRow}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          width: \"150\",\r\n        }}\r\n      >\r\n        <Text style={[styles.text, { textAlign: \"right\" }]}>\r\n          For ManPrema Inc\r\n        </Text>\r\n        <Text\r\n          style={[\r\n            styles.text,\r\n            { textAlign: \"right\", fontWeight: \"bold\", fontSize: 13 },\r\n          ]}\r\n        >\r\n          Authorized Signatory\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Signature;\r\n", "import { Request, Response, NextFunction, query } from \"express\";\r\nimport OrderDetail from \"../../reports/order/order_detail.js\";\r\nimport { renderToFile, renderToStream } from \"@react-pdf/renderer\";\r\nimport fetch from \"node-fetch\";\r\nimport env from \"././../../config/env.js\";\r\nimport { orderSchema } from \"../../types/zod-schemas.js\";\r\nimport { getOrder } from \"../../graphql/queries/get-order.js\";\r\nimport fs, { stat } from \"fs\";\r\nimport { NotFoundError } from \"@manprtickets/common\";\r\nimport { fileURLToPath } from \"url\";\r\nimport path from \"path\";\r\n\r\nconst { dirname } = path;\r\n\r\nexport const downloadPDF = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const queryOrderData = getOrder(req.params.orderid);\r\n  \r\n  const response = await fetch(`${env.API_URL}/graphql`, {\r\n    method: \"POST\",\r\n    body: queryOrderData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      usertoken: req.session?.jwt as string,\r\n    },\r\n  });\r\n  const order = await response.json();\r\n\r\n  if (!order) {\r\n    return res.status(404).send(\"Order not found\");\r\n  }\r\n\r\n  const orderData = order?.data.orderByID;\r\n\r\n  const validatedOrder = orderSchema.safeParse(orderData);\r\n\r\n  if (!validatedOrder.success) {\r\n    console.log(validatedOrder.error);\r\n    return res.status(400).send(\"Invalid order data\");\r\n  }\r\n\r\n  // console.log(\"order: \", validatedOrder.data);\r\n\r\n  const pdfStream = await renderToStream(\r\n    <OrderDetail order={validatedOrder.data} />\r\n  );\r\n\r\n  res.setHeader(\"Content-Type\", \"application/pdf\");\r\n  res.setHeader(\"Content-Disposition\", 'attachment; filename=\"order-doc.pdf\"');\r\n\r\n  pdfStream.pipe(res);\r\n  pdfStream.on(\"end\", () => console.log(\"Done streaming, response sent\"));\r\n};\r\n\r\nexport const generateOrderPdf = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    // const order = await Order.findById({\r\n    //   _id: req.params.orderid,\r\n    // });\r\n    const queryOrderData = getOrder(req.params.orderid);\r\n\r\n    // console.log(\"usertoken: \", req.session.jwt);\r\n\r\n    const response = await fetch(`${env.API_URL}/graphql`, {\r\n      method: \"POST\",\r\n      body: queryOrderData,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        usertoken: req.session?.jwt as string,\r\n      },\r\n    });\r\n\r\n    const order = await response.json();\r\n\r\n    if (!order) {\r\n      return res.status(404).send(\"Order not found\");\r\n    }\r\n\r\n    const orderData = order?.data.orderByID;\r\n\r\n    // console.log(\"order : \", orderData);\r\n\r\n    const validatedOrder = orderSchema.safeParse(orderData);\r\n\r\n    if (!validatedOrder.success) {\r\n      console.log(validatedOrder.error);\r\n\r\n      return res.status(400).send(\"Invalid order data\");\r\n    }\r\n\r\n    // console.log(\"received json: \", validatedOrder.data);\r\n\r\n    const __filename = fileURLToPath(import.meta.url);\r\n    const __dirname = dirname(__filename);\r\n\r\n    console.log(\"dir name: \", __dirname);\r\n\r\n    const tempFiles = path.join(__dirname, \"temp_files\");\r\n    const pdfPath = path.join(tempFiles, \"order-doc.pdf\");\r\n\r\n    console.log(\"tempDir: \", tempFiles, \" creation path: \", pdfPath);\r\n\r\n    const relativePathFromCWD = path.relative(process.cwd(), pdfPath);\r\n\r\n    console.log(\"created path: \", relativePathFromCWD);\r\n\r\n    await renderToFile(<OrderDetail order={validatedOrder.data} />, pdfPath);\r\n    // const processPath = process.cwd();\r\n\r\n    // console.log(\"process path: \", processPath);\r\n\r\n    // fs.stat(\"order-doc.pdf\", (err, stats) => {\r\n    //   if (err) {\r\n    //     console.error(\"Error getting file info: \", err);\r\n    //     throw new NotFoundError();\r\n    //   }\r\n    //   console.log(\"File Information: \");\r\n    //   console.log(\"Size (byptes): \", stats.size);\r\n    //   console.log(\"Is File: \", stats.isFile());\r\n    // console.log(\"Is Director: \", stats.isDirectory());\r\n    // console.log(\"Creation Time: \", stats.birthtime);\r\n    // console.log(\"Last modified Time: \", stats.mtime);\r\n    // console.log(\"Permissions (octal): \", stats.mode.toString(8));\r\n    // res.status(201).send({id: req.params.orderid, filename: \"order-pdf.doc\", fileurl: stats.});\r\n    // });\r\n\r\n    const returnObject = {\r\n      id: req.params.orderid,\r\n      filename: \"order-doc.pdf\",\r\n      fileurl: relativePathFromCWD,\r\n    };\r\n\r\n    // console.log(\"returning....\", returnObject);\r\n    res.send(returnObject);\r\n    // return returnObject;\r\n  } catch (error) {\r\n    console.log(\"error in process: \", error);\r\n    return { id: req.params.orderid, filename: \"error\", fileurl: \"error url\" };\r\n  }\r\n};\r\n", "export function getOrder(idStr: string) {\r\n  const data = JSON.stringify({\r\n    query: `query OrderByID($orderid: ID!) {\r\n      orderByID(orderid: $orderid) {\r\n        id\r\n        userId\r\n        status\r\n        orderDate\r\n        totalQuantity\r\n        orderValue\r\n        items {\r\n          orderitem {\r\n            id\r\n            itemType\r\n            title\r\n            description\r\n            image\r\n            unit\r\n            dimensions\r\n          }\r\n          quantity\r\n          price\r\n          totalPrice\r\n        }\r\n        shipping {\r\n          id\r\n          email\r\n          receiver\r\n          phone\r\n          house\r\n          street\r\n          pincode\r\n          city\r\n        }\r\n      }\r\n    }`,\r\n    variables: {\r\n      orderid: idStr,\r\n    },\r\n  });\r\n\r\n  return data;\r\n}", "import { MONGODB_URI, startServer } from \"./app.js\";\r\nimport env from \"./config/env.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\n// const MONGODB_URI = `mongodb+srv://${env.MONGO_USER}:${env.MONGO_PASSWORD}@cluster0.q4wsrjb.mongodb.net/${env.MONGO_DEFAULT_DATABASE}?retryWrites=true&w=majority&appName=Cluster0`;\r\n\r\nconst connectDB = async () => {\r\n  //   console.log(\"Starting up ..: \", MONGODB_URI);\r\n\r\n  await mongoose\r\n    .connect(MONGODB_URI)\r\n    .then((result) => {\r\n      console.log(\"Connected to MongoDB\");\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  //   app.listen(env.PORT, () => {\r\n  //     console.log(`Server is running onto port ${env.PORT}`);\r\n  //   });\r\n};\r\n\r\n// const server = app.listen(env.PORT, () => {\r\nconnectDB();\r\nstartServer();\r\n\r\n// });\r\n"],
  "mappings": "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",
  "names": ["express", "RESTDataSource", "RESTDataSource", "RESTDataSource", "RESTDataSource", "RESTDataSource", "RESTDataSource", "RESTDataSource", "_", "_", "_", "z", "OrderStatus", "z", "ItemTypes", "_", "_", "_", "sign", "verify", "encrypt", "decrypt", "z", "BadRequestError", "BadRequestError", "BadRequestError", "BadRequestError", "express", "mongoose", "itemSchema", "validator", "validator", "NotAuthorizedError", "NotFoundError", "NotFoundError", "NotAuthorizedError", "router", "express", "express", "requireAuth", "NotAuthorizedError", "NotFoundError", "mongoose", "Schema", "itemtypes", "mongoose", "NotFoundError", "NotAuthorizedError", "mongoose", "router", "express", "requireAuth", "express", "requireAuth", "mongoose", "Schema", "mongoose", "Schema", "update_default", "router", "express", "requireAuth", "update_default", "requireAuth", "express", "mongoose", "Schema", "itemtypes", "units", "new_default", "mongoose", "mongoose", "NotFoundError", "NotFoundError", "update_default", "NotAuthorizedError", "NotFoundError", "NotFoundError", "NotAuthorizedError", "router", "express", "requireAuth", "new_default", "update_default", "requireAuth", "express", "mongoose", "Schema", "itemtypes", "units", "mongoose", "session", "new_default", "mongoose", "mongoose", "NotFoundError", "NotFoundError", "update_default", "NotAuthorizedError", "NotFoundError", "NotFoundError", "NotAuthorizedError", "delete_default", "router", "express", "requireAuth", "new_default", "update_default", "delete_default", "requireAuth", "express", "mongoose", "Schema", "cartItemSchema", "mongoose", "Schema", "router", "express", "requireAuth", "requireAuth", "express", "mongoose", "Schema", "mongoose", "orderItemSchema", "orderSchema", "NotAuthorizedError", "NotFoundError", "delete_default", "mongoose", "Schema", "addressSchema", "_", "NotAuthorizedError", "NotFoundError", "mongoose", "NotFoundError", "NotAuthorizedError", "View", "Text", "View", "jsx", "View", "Text", "Text", "View", "jsx", "jsxs", "Text", "View", "jsx", "jsxs", "View", "Text", "Text", "View", "jsx", "jsxs", "View", "Text", "Text", "View", "jsx", "jsxs", "View", "Text", "Text", "View", "jsx", "jsxs", "View", "Text", "Text", "View", "jsx", "jsxs", "View", "Text", "jsx", "jsxs", "View", "jsx", "router", "express", "requireAuth", "delete_default", "express", "router", "mongoose"]
}
